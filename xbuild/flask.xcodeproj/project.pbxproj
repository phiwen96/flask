// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		0AFEF793B78B4FF286BBF0D4 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = A7401C0546D1420596A3469D /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				003C8D08B0008F35F218E126 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		5D957F3CAE7F455BA008A28D /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 4701A91402DD4D40ACD4C326 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				8F145555E5424B4DB93F4791 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		5F9EAAC2997B4C449485D92A /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 7A6AC5B0376242938523076B /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				A57B0D3CC6DADCDAFDFAFFB4 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				E9FECEEE5A31400AA46BA97A /* PBXTargetDependency */,
				5969C37A66EB43248C48E3A9 /* PBXTargetDependency */,
				C0D12877CBBB439C8A986AF1 /* PBXTargetDependency */,
				D57F5EF5E6CC42A18D84A975 /* PBXTargetDependency */,
				C7DF89E830594655987C4B6B /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		8BCC47B28AFF4D208282E0E3 /* Experimental */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 9636C7C5C5DA4E39948B7978 /* Build configuration list for PBXAggregateTarget "Experimental" */;
			buildPhases = (
				C4C9AA232F8F3A9EE88BD532 /* Generate CMakeFiles/Experimental */,
			);
			dependencies = (
				98A8CF09FFFA430EB63FDC59 /* PBXTargetDependency */,
			);
			name = Experimental;
			productName = Experimental;
		};
		8F7EA38EFB06478FAA432988 /* Nightly */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = CDE94DEC9A6A44F9B3F0630E /* Build configuration list for PBXAggregateTarget "Nightly" */;
			buildPhases = (
				AE5ED3F895600BE7461FC942 /* Generate CMakeFiles/Nightly */,
			);
			dependencies = (
				4381A901A0164241BB1CF200 /* PBXTargetDependency */,
			);
			name = Nightly;
			productName = Nightly;
		};
		93BED302D5AB46B1A20A308B /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = B8565600D77F4019AA478EEF /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				05FE8F7C4FD198E33593F99D /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		D00236F8350B4BD4A76C0495 /* run */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = E39C327947A541688A528CF6 /* Build configuration list for PBXAggregateTarget "run" */;
			buildPhases = (
				DD66C68F859EAAB286F37050 /* Generate src/CMakeFiles/run */,
			);
			dependencies = (
				4EB6E4DB901F4D9C82F0774D /* PBXTargetDependency */,
			);
			name = run;
			productName = run;
		};
		F1B35F975F0447D9A35249AE /* NightlyMemoryCheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 7A168D94459746E1916A9C46 /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */;
			buildPhases = (
				0B4A4F3422DCE1F63972D19D /* Generate CMakeFiles/NightlyMemoryCheck */,
			);
			dependencies = (
				C9FE0265470F4909B800EB9A /* PBXTargetDependency */,
			);
			name = NightlyMemoryCheck;
			productName = NightlyMemoryCheck;
		};
		F48A737291E840ABB34AE52B /* Continuous */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = E4939105F9CC447CBE1F0BB0 /* Build configuration list for PBXAggregateTarget "Continuous" */;
			buildPhases = (
				01BDD19E726AAFBE4DD8582B /* Generate CMakeFiles/Continuous */,
			);
			dependencies = (
				756E3D090B474C08B6D5BA78 /* PBXTargetDependency */,
			);
			name = Continuous;
			productName = Continuous;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		0248E940953445D38109726F /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 34B2BB1E3D3642AA94D8516A /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */; };
		0E2878C32920419286E4514C /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = 2CDC9CD396C14F24A9182C8B /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */; };
		196C08395A9644DA920B37FE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 00B88BEC352244309219CB70 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */; };
		3C94218292874F71B413A3C9 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */ = {isa = PBXBuildFile; fileRef = 07DBD9E0155B466BBA9ECF8C /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */; };
		42DE33D4B10F426181FFD511 /* /Users/philipwenkel/Github/flask/src/flask.cpp */ = {isa = PBXBuildFile; fileRef = 389722A625E241FDBDA8DA92 /* /Users/philipwenkel/Github/flask/src/flask.cpp */; };
		48D9D1E02FAE4CDDA0296668 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = C5683C95265D4FABA92906F8 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */; };
		5D9D89D06ABB4E76AF352A32 /* /Users/philipwenkel/Github/flask/tests/test.cpp */ = {isa = PBXBuildFile; fileRef = 4B2802B94ED64EC8B468469A /* /Users/philipwenkel/Github/flask/tests/test.cpp */; };
		6AF009A9C480412A900D8E08 /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = 3C0A9080A860453794FC0ECA /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */; };
		6E386651C33941CB9EB24E55 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = 423E27668BA34874A7E28AEC /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */; };
		84AEAF9E15694C738A8A6477 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */ = {isa = PBXBuildFile; fileRef = 822239C94E644992A27B9A73 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */; };
		89704FB7947444D0B3F01283 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */ = {isa = PBXBuildFile; fileRef = 6C4FE188ADB241F98B76A6DE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */; };
		8E46EFDDE4C64C7C8EF101A0 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */ = {isa = PBXBuildFile; fileRef = 71A1381FCE9D486BA3993E2A /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */; };
		BA0801C8AE4B4DB39860BBC7 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */ = {isa = PBXBuildFile; fileRef = B239995152884166A9CDE1E8 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */; };
		CFE13A868F7B424ABFC56A1A /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = B356CDDEDC33446B9EE05866 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */; };
		D3E94643DD0E476586EE3925 /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = C296FFCCD45F497CBE91212B /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */; };
		FF5070B8CC734DD080027023 /* /Users/philipwenkel/Github/flask/src/main.cpp */ = {isa = PBXBuildFile; fileRef = 896ACD68E37F4B23B81A7694 /* /Users/philipwenkel/Github/flask/src/main.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		019ACE2F296441F0BE8B4CEE /* Kuk */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Kuk;
		};
		A0FC5E1053C34CAE99DA3CF4 /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		E56983B97AFC498BB82B23E8 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		06EF0BB05FA64FA6AD6F5AB5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		1C3E7BD60BE64C8E8567F6B5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		21DB31322E5C468AACFBD23F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		24147146C3DF466ABF42EC49 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		368222C888084AFB8F381A49 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 67370F6B5532405499FF1085;
			remoteInfo = flask;
		};
		429299AFFD1B4B8C86138D12 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		58605D00F2BA449B81F8AE80 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		6B36D446AD5B487E9B4F1BE3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5F9EAAC2997B4C449485D92A;
			remoteInfo = ALL_BUILD;
		};
		6BE2EB669E5B49139B0084AF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 67370F6B5532405499FF1085;
			remoteInfo = flask;
		};
		7B73AF40AA6043A4A2B4138E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FFF2FBC16E244076B08BC7CA;
			remoteInfo = test_flask;
		};
		8A92E9192BAA41D4BFC50944 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		91D4A94F67154B7E89DEF738 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		ACA5FB975BF043BF9BF3BE32 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		C9FE45CC66C9479E9A691D57 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 886B020EA713414EA4F07194;
			remoteInfo = test_ph_scanner;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		00B88BEC352244309219CB70 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = dependencies/ph_scanner/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		07DBD9E0155B466BBA9ECF8C /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flask.hpp; path = include/flask/flask.hpp; sourceTree = SOURCE_ROOT; };
		2BD648FA28114FA1B9A44A02 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2CDC9CD396C14F24A9182C8B /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
		34B2BB1E3D3642AA94D8516A /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		389722A625E241FDBDA8DA92 /* /Users/philipwenkel/Github/flask/src/flask.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flask.cpp; path = src/flask.cpp; sourceTree = SOURCE_ROOT; };
		3C0A9080A860453794FC0ECA /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		423E27668BA34874A7E28AEC /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = dependencies/ph_scanner/tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		46F1A84D957E471DAA906173 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		489D195265D043CDA1C92C1A /* test_ph_scanner */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_ph_scanner; sourceTree = BUILT_PRODUCTS_DIR; };
		4B2802B94ED64EC8B468469A /* /Users/philipwenkel/Github/flask/tests/test.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test.cpp; path = tests/test.cpp; sourceTree = SOURCE_ROOT; };
		4ECCAAFECEF049DDA56C244A /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5C40C8A80A164EF39D71932C /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5E13C14F23754315B0495380 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6C4FE188ADB241F98B76A6DE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = scanner.cpp; path = dependencies/ph_scanner/src/scanner.cpp; sourceTree = SOURCE_ROOT; };
		71A1381FCE9D486BA3993E2A /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test_vari.cpp; path = dependencies/ph_scanner/tests/test_vari.cpp; sourceTree = SOURCE_ROOT; };
		822239C94E644992A27B9A73 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = scanner.hpp; path = dependencies/ph_scanner/include/ph_scanner/scanner.hpp; sourceTree = SOURCE_ROOT; };
		8592824407404A7C8572F7E6 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		896ACD68E37F4B23B81A7694 /* /Users/philipwenkel/Github/flask/src/main.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = main.cpp; path = src/main.cpp; sourceTree = SOURCE_ROOT; };
		A48C238C91C74BE195600990 /* flask */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = flask; sourceTree = BUILT_PRODUCTS_DIR; };
		B239995152884166A9CDE1E8 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test_vari2.cpp; path = dependencies/ph_scanner/tests/test_vari2.cpp; sourceTree = SOURCE_ROOT; };
		B356CDDEDC33446B9EE05866 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = dependencies/ph_scanner/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C296FFCCD45F497CBE91212B /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C5683C95265D4FABA92906F8 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = dependencies/ph_scanner/tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
		CC021B50CCD2404EAC4A8CC9 /* ph_scanner */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libph_scanner.a; sourceTree = BUILT_PRODUCTS_DIR; };
		F0AF3DBA62364A488FB921C2 /* test_flask */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_flask; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		196379F0702B4515B2B2DBDE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		70ECBAB7C53E4919BF70DF5C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		71DA1F0FD4FB435AB307ED55 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		92179D41359B4706926D453D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		05B4B7A4C2A8443396189B00 /* NightlyMemoryCheck */ = {
			isa = PBXGroup;
			children = (
				70CE0513FB5547CD80CFC3A4 /* CMake Rules */,
				4ECCAAFECEF049DDA56C244A /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = NightlyMemoryCheck;
			sourceTree = "<group>";
		};
		0D1F9CF1820A469BA969DE5E /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		0F0AFE5AFA1A4610B77675E1 /* sources */ = {
			isa = PBXGroup;
			children = (
				389722A625E241FDBDA8DA92 /* /Users/philipwenkel/Github/flask/src/flask.cpp */,
				896ACD68E37F4B23B81A7694 /* /Users/philipwenkel/Github/flask/src/main.cpp */,
			);
			name = sources;
			sourceTree = "<group>";
		};
		1C43825ECAA24D719ECBC49C /* headers */ = {
			isa = PBXGroup;
			children = (
				07DBD9E0155B466BBA9ECF8C /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */,
			);
			name = headers;
			sourceTree = "<group>";
		};
		2F451EF86D584DE4BC14BA21 /* ph_scanner */ = {
			isa = PBXGroup;
			children = (
				35BF05F5416A42398C39FAC3 /* Source Files */,
				85544AA7404F431DA365BE94 /* Header Files */,
				00B88BEC352244309219CB70 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */,
			);
			name = ph_scanner;
			sourceTree = "<group>";
		};
		3145B5894F8D434F913A27CF /* Header Files */ = {
			isa = PBXGroup;
			children = (
				3C0A9080A860453794FC0ECA /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		35BF05F5416A42398C39FAC3 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6C4FE188ADB241F98B76A6DE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		3964E5B35AC348AB85C0E568 /* test_ph_scanner */ = {
			isa = PBXGroup;
			children = (
				F2D7F25726064B03895D27AB /* Source Files */,
				E2AF4188893446EBB841C570 /* Header Files */,
				B356CDDEDC33446B9EE05866 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */,
			);
			name = test_ph_scanner;
			sourceTree = "<group>";
		};
		4456F0A278D941CBB4112BAC /* run */ = {
			isa = PBXGroup;
			children = (
				63CA541DAE49418580C18D5B /* CMake Rules */,
				2BD648FA28114FA1B9A44A02 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */,
			);
			name = run;
			sourceTree = "<group>";
		};
		55E1B0BCA3CF4217B0065BF1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4B2802B94ED64EC8B468469A /* /Users/philipwenkel/Github/flask/tests/test.cpp */,
				2CDC9CD396C14F24A9182C8B /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		63CA541DAE49418580C18D5B /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		66172BB5380B4DDAA5EFE91A /* CTestDashboardTargets */ = {
			isa = PBXGroup;
			children = (
				05B4B7A4C2A8443396189B00 /* NightlyMemoryCheck */,
				E719EC78F60B42828811883F /* Nightly */,
				DBD9C9C68E21458BB7E0DEDA /* Continuous */,
				78C9736748314FD6A4093CA9 /* Experimental */,
			);
			name = CTestDashboardTargets;
			sourceTree = "<group>";
		};
		670E51BD3A8E4146BB81AB2B /* ph_scanner */ = {
			isa = PBXGroup;
			children = (
				2F451EF86D584DE4BC14BA21 /* ph_scanner */,
				3964E5B35AC348AB85C0E568 /* test_ph_scanner */,
			);
			name = ph_scanner;
			sourceTree = "<group>";
		};
		70CE0513FB5547CD80CFC3A4 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		78C9736748314FD6A4093CA9 /* Experimental */ = {
			isa = PBXGroup;
			children = (
				EF188EB5A1C54195A3AAEB0A /* CMake Rules */,
				5E13C14F23754315B0495380 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = Experimental;
			sourceTree = "<group>";
		};
		85544AA7404F431DA365BE94 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				822239C94E644992A27B9A73 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		9D7DEBEF58C94D2A8023D3B2 = {
			isa = PBXGroup;
			children = (
				66172BB5380B4DDAA5EFE91A /* CTestDashboardTargets */,
				A6D7E2318E0244E78860D004 /* ALL_BUILD */,
				A8A8E6BB6C294DA693415C74 /* dependencies */,
				4456F0A278D941CBB4112BAC /* run */,
				D1552AB3BC40438EB93BD451 /* flask */,
				9FC9DC3E642C44AF88B67425 /* Products */,
				0D1F9CF1820A469BA969DE5E /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		9DB45E8C96914289AFB7B040 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9FC9DC3E642C44AF88B67425 /* Products */ = {
			isa = PBXGroup;
			children = (
				A48C238C91C74BE195600990 /* flask */,
				CC021B50CCD2404EAC4A8CC9 /* ph_scanner */,
				F0AF3DBA62364A488FB921C2 /* test_flask */,
				489D195265D043CDA1C92C1A /* test_ph_scanner */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		A6D7E2318E0244E78860D004 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				FE28107FADB94106934CA24D /* CMake Rules */,
				5C40C8A80A164EF39D71932C /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		A8A8E6BB6C294DA693415C74 /* dependencies */ = {
			isa = PBXGroup;
			children = (
				670E51BD3A8E4146BB81AB2B /* ph_scanner */,
			);
			name = dependencies;
			sourceTree = "<group>";
		};
		C11D98B4B4E146EF9BB5E48D /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		C75ED7DF686E42B391C90179 /* test_flask */ = {
			isa = PBXGroup;
			children = (
				55E1B0BCA3CF4217B0065BF1 /* Source Files */,
				3145B5894F8D434F913A27CF /* Header Files */,
				C296FFCCD45F497CBE91212B /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */,
			);
			name = test_flask;
			sourceTree = "<group>";
		};
		D1552AB3BC40438EB93BD451 /* flask */ = {
			isa = PBXGroup;
			children = (
				0F0AFE5AFA1A4610B77675E1 /* sources */,
				1C43825ECAA24D719ECBC49C /* headers */,
				F99F325271BD44CB9CAFEBD0 /* _ */,
				34B2BB1E3D3642AA94D8516A /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */,
			);
			name = flask;
			sourceTree = "<group>";
		};
		DBD9C9C68E21458BB7E0DEDA /* Continuous */ = {
			isa = PBXGroup;
			children = (
				C11D98B4B4E146EF9BB5E48D /* CMake Rules */,
				46F1A84D957E471DAA906173 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = Continuous;
			sourceTree = "<group>";
		};
		E2AF4188893446EBB841C570 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				423E27668BA34874A7E28AEC /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		E719EC78F60B42828811883F /* Nightly */ = {
			isa = PBXGroup;
			children = (
				9DB45E8C96914289AFB7B040 /* CMake Rules */,
				8592824407404A7C8572F7E6 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = Nightly;
			sourceTree = "<group>";
		};
		EF188EB5A1C54195A3AAEB0A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		F2D7F25726064B03895D27AB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				71A1381FCE9D486BA3993E2A /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */,
				B239995152884166A9CDE1E8 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */,
				C5683C95265D4FABA92906F8 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F99F325271BD44CB9CAFEBD0 /* _ */ = {
			isa = PBXGroup;
			children = (
				C75ED7DF686E42B391C90179 /* test_flask */,
			);
			name = _;
			sourceTree = "<group>";
		};
		FE28107FADB94106934CA24D /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		5B841C89CF07450D9A268995 /* ph_scanner */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2EE33F79FC074CBEBCF46605 /* Build configuration list for PBXNativeTarget "ph_scanner" */;
			buildPhases = (
				A4A5E9DC78D0457EAF36BCFF /* Sources */,
				92179D41359B4706926D453D /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ph_scanner;
			productName = ph_scanner;
			productReference = CC021B50CCD2404EAC4A8CC9 /* ph_scanner */;
			productType = "com.apple.product-type.library.static";
		};
		67370F6B5532405499FF1085 /* flask */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E3050504E2DD4E799423CB75 /* Build configuration list for PBXNativeTarget "flask" */;
			buildPhases = (
				9B7BE2DBACC346BCAA969C8C /* Sources */,
				196379F0702B4515B2B2DBDE /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3CDE91CFB1FC453F9367B141 /* PBXTargetDependency */,
			);
			name = flask;
			productName = flask;
			productReference = A48C238C91C74BE195600990 /* flask */;
			productType = "com.apple.product-type.tool";
		};
		886B020EA713414EA4F07194 /* test_ph_scanner */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D931E8526E2944ECACFC0272 /* Build configuration list for PBXNativeTarget "test_ph_scanner" */;
			buildPhases = (
				580B10127A4F48E391F4A343 /* Sources */,
				70ECBAB7C53E4919BF70DF5C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				007597D3A0A64B2A885CBDCD /* PBXTargetDependency */,
			);
			name = test_ph_scanner;
			productName = test_ph_scanner;
			productReference = 489D195265D043CDA1C92C1A /* test_ph_scanner */;
			productType = "com.apple.product-type.tool";
		};
		FFF2FBC16E244076B08BC7CA /* test_flask */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7F15BF603DA14C8E88DBEAF8 /* Build configuration list for PBXNativeTarget "test_flask" */;
			buildPhases = (
				3667CCF1C61045C993F4C2DB /* Sources */,
				71DA1F0FD4FB435AB307ED55 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				714D4B0EE8994FC691FE0CC9 /* PBXTargetDependency */,
			);
			name = test_flask;
			productName = test_flask;
			productReference = F0AF3DBA62364A488FB921C2 /* test_flask */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		601ECEBA351544749103E0FF /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = 2D527B32415B44E6BDE6A16B /* Build configuration list for PBXProject "flask" */;
			buildSettings = {
			};
			buildStyles = (
				A0FC5E1053C34CAE99DA3CF4 /* Debug */,
				E56983B97AFC498BB82B23E8 /* Release */,
				019ACE2F296441F0BE8B4CEE /* Kuk */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = 9D7DEBEF58C94D2A8023D3B2;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				5F9EAAC2997B4C449485D92A /* ALL_BUILD */,
				F48A737291E840ABB34AE52B /* Continuous */,
				8BCC47B28AFF4D208282E0E3 /* Experimental */,
				8F7EA38EFB06478FAA432988 /* Nightly */,
				F1B35F975F0447D9A35249AE /* NightlyMemoryCheck */,
				0AFEF793B78B4FF286BBF0D4 /* RUN_TESTS */,
				93BED302D5AB46B1A20A308B /* ZERO_CHECK */,
				67370F6B5532405499FF1085 /* flask */,
				5D957F3CAE7F455BA008A28D /* install */,
				5B841C89CF07450D9A268995 /* ph_scanner */,
				D00236F8350B4BD4A76C0495 /* run */,
				FFF2FBC16E244076B08BC7CA /* test_flask */,
				886B020EA713414EA4F07194 /* test_ph_scanner */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		003C8D08B0008F35F218E126 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
";
			showEnvVarsInLog = 0;
		};
		01BDD19E726AAFBE4DD8582B /* Generate CMakeFiles/Continuous */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Continuous";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/Continuous			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
";
			showEnvVarsInLog = 0;
		};
		05FE8F7C4FD198E33593F99D /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/ZERO_CHECK			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		09FB783FD30DC6E66DF354AF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		0B4A4F3422DCE1F63972D19D /* Generate CMakeFiles/NightlyMemoryCheck */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/NightlyMemoryCheck";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/NightlyMemoryCheck			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
";
			showEnvVarsInLog = 0;
		};
		23E0E19C1FE635DB84934AD9 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		323E6CE94951678BF055CC89 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		6F99315A684C6A073F49EF1D = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		87AF4882E018677E2624B544 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		910A41151295C5F9742C25BD = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A57B0D3CC6DADCDAFDFAFFB4 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/ALL_BUILD			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		A68D7F74133ED74D8658B427 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		AE5ED3F895600BE7461FC942 /* Generate CMakeFiles/Nightly */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Nightly";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/Nightly			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
";
			showEnvVarsInLog = 0;
		};
		C4C9AA232F8F3A9EE88BD532 /* Generate CMakeFiles/Experimental */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Experimental";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/Experimental			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
";
			showEnvVarsInLog = 0;
		};
		DD66C68F859EAAB286F37050 /* Generate src/CMakeFiles/run */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate src/CMakeFiles/run";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/run			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/src
  /Users/philipwenkel/Github/flask/xbuild/src/Debug/flask
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/src
  /Users/philipwenkel/Github/flask/xbuild/src/Release/flask
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/src
  /Users/philipwenkel/Github/flask/xbuild/src/Kuk/flask
fi
";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		3667CCF1C61045C993F4C2DB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5D9D89D06ABB4E76AF352A32 /* /Users/philipwenkel/Github/flask/tests/test.cpp */,
				0E2878C32920419286E4514C /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		580B10127A4F48E391F4A343 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8E46EFDDE4C64C7C8EF101A0 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */,
				BA0801C8AE4B4DB39860BBC7 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */,
				48D9D1E02FAE4CDDA0296668 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9B7BE2DBACC346BCAA969C8C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				42DE33D4B10F426181FFD511 /* /Users/philipwenkel/Github/flask/src/flask.cpp */,
				FF5070B8CC734DD080027023 /* /Users/philipwenkel/Github/flask/src/main.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A4A5E9DC78D0457EAF36BCFF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				89704FB7947444D0B3F01283 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		007597D3A0A64B2A885CBDCD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 21DB31322E5C468AACFBD23F /* PBXContainerItemProxy */;
		};
		3CDE91CFB1FC453F9367B141 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 91D4A94F67154B7E89DEF738 /* PBXContainerItemProxy */;
		};
		4381A901A0164241BB1CF200 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 24147146C3DF466ABF42EC49 /* PBXContainerItemProxy */;
		};
		4EB6E4DB901F4D9C82F0774D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 67370F6B5532405499FF1085 /* flask */;
			targetProxy = 6BE2EB669E5B49139B0084AF /* PBXContainerItemProxy */;
		};
		5969C37A66EB43248C48E3A9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 886B020EA713414EA4F07194 /* test_ph_scanner */;
			targetProxy = C9FE45CC66C9479E9A691D57 /* PBXContainerItemProxy */;
		};
		714D4B0EE8994FC691FE0CC9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 8A92E9192BAA41D4BFC50944 /* PBXContainerItemProxy */;
		};
		756E3D090B474C08B6D5BA78 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 429299AFFD1B4B8C86138D12 /* PBXContainerItemProxy */;
		};
		8F145555E5424B4DB93F4791 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5F9EAAC2997B4C449485D92A /* ALL_BUILD */;
			targetProxy = 6B36D446AD5B487E9B4F1BE3 /* PBXContainerItemProxy */;
		};
		98A8CF09FFFA430EB63FDC59 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = ACA5FB975BF043BF9BF3BE32 /* PBXContainerItemProxy */;
		};
		C0D12877CBBB439C8A986AF1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 67370F6B5532405499FF1085 /* flask */;
			targetProxy = 368222C888084AFB8F381A49 /* PBXContainerItemProxy */;
		};
		C7DF89E830594655987C4B6B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 1C3E7BD60BE64C8E8567F6B5 /* PBXContainerItemProxy */;
		};
		C9FE0265470F4909B800EB9A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 58605D00F2BA449B81F8AE80 /* PBXContainerItemProxy */;
		};
		D57F5EF5E6CC42A18D84A975 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FFF2FBC16E244076B08BC7CA /* test_flask */;
			targetProxy = 7B73AF40AA6043A4A2B4138E /* PBXContainerItemProxy */;
		};
		E9FECEEE5A31400AA46BA97A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 06EF0BB05FA64FA6AD6F5AB5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		01087D76AD0C42F79843199C /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		03B42CFB984E439B9F7BE310 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		1389A9297BC0442FBBE4816B /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		1417803DA89D4DB7970385ED /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		22616FFF842A4AC0A62D0346 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		276495BA04E840EFB04572F9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		3005B5E0D1024369982A4E1D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Release;
		};
		30B2EF018D94412184C28210 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		31049EBAEDB34198BFCDBA20 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		32F80F982EB242CF9B0767DA /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/include/flask,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Kuk/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		33A707E0D7DC4716899C683D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = run;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		41285BB0A5CD42F3AC63521D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests/CMakeFiles/test_ph_scanner.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Debug/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests;
				SYSTEM_HEADER_SEARCH_PATHS = (/opt/homebrew/include,"$(inherited)");
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		4881A02D2C83422591AF772B /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/CMakeFiles/ph_scanner.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		516D1CBB47264A0E8134BE24 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		51E3B8A1872E462E96E9D0EA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		589AC8A3153A44B3BB14A705 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Kuk/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		59BF6443A6C64143BDDAB781 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		659254E74AE0466D896BA009 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Debug;
		};
		6BD06B0EA1BE403FAD7C2718 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts    '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Debug/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		6D4C40433D624A6EA1E7BE13 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		7B616D559A0045CBB31FE749 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/include/flask,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts     -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Release/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		8137343C01154BE0A151F7F3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		82B048A284574B51B51A0137 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = run;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		91C9C5425AB44ECD9DAFE878 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests/CMakeFiles/test_ph_scanner.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Kuk/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests;
				SYSTEM_HEADER_SEARCH_PATHS = (/opt/homebrew/include,"$(inherited)");
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		A1525B34D5A74A46BDB97CA7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		A24E64DF3A964A278A6F288F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/include/flask,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts    '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Debug/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		AD460D273DFC41B1AA3993EF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		B087A39BA6764FE49B11A6D2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		B0F192A495DE439AAB510B1E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = run;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		B27594B1FEF84A098B0C0240 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		B4C7AA999C964EB3A0D8E78E /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Kuk;
		};
		B6AE30A9B8F34E19A0812026 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		C3F28E0D9FF84776A510A092 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests/CMakeFiles/test_ph_scanner.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Release/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests;
				SYSTEM_HEADER_SEARCH_PATHS = (/opt/homebrew/include,"$(inherited)");
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		CE79888960FB40698B63097B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		CFC8F81A53AB40318801DB84 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		D1E59837BBC34FB7A68D6644 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		D982F478499B400B9381F635 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		DA85DF7645214995B81F1152 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/CMakeFiles/ph_scanner.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		DEBC6DEDDA964BA2892223D0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts     -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Release/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		DF68244D5CA94538928D0C8A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		E556257A89884F6FBD57C6D9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/CMakeFiles/ph_scanner.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		EEB363EEA5EF44A6AD754FAD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		2D527B32415B44E6BDE6A16B /* Build configuration list for PBXProject "flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				659254E74AE0466D896BA009 /* Debug */,
				3005B5E0D1024369982A4E1D /* Release */,
				B4C7AA999C964EB3A0D8E78E /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2EE33F79FC074CBEBCF46605 /* Build configuration list for PBXNativeTarget "ph_scanner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DA85DF7645214995B81F1152 /* Debug */,
				E556257A89884F6FBD57C6D9 /* Release */,
				4881A02D2C83422591AF772B /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4701A91402DD4D40ACD4C326 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B27594B1FEF84A098B0C0240 /* Debug */,
				51E3B8A1872E462E96E9D0EA /* Release */,
				B6AE30A9B8F34E19A0812026 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7A168D94459746E1916A9C46 /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EEB363EEA5EF44A6AD754FAD /* Debug */,
				DF68244D5CA94538928D0C8A /* Release */,
				22616FFF842A4AC0A62D0346 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7A6AC5B0376242938523076B /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A1525B34D5A74A46BDB97CA7 /* Debug */,
				03B42CFB984E439B9F7BE310 /* Release */,
				1389A9297BC0442FBBE4816B /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7F15BF603DA14C8E88DBEAF8 /* Build configuration list for PBXNativeTarget "test_flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6BD06B0EA1BE403FAD7C2718 /* Debug */,
				DEBC6DEDDA964BA2892223D0 /* Release */,
				589AC8A3153A44B3BB14A705 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9636C7C5C5DA4E39948B7978 /* Build configuration list for PBXAggregateTarget "Experimental" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CE79888960FB40698B63097B /* Debug */,
				CFC8F81A53AB40318801DB84 /* Release */,
				1417803DA89D4DB7970385ED /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A7401C0546D1420596A3469D /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B087A39BA6764FE49B11A6D2 /* Debug */,
				276495BA04E840EFB04572F9 /* Release */,
				D982F478499B400B9381F635 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B8565600D77F4019AA478EEF /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AD460D273DFC41B1AA3993EF /* Debug */,
				6D4C40433D624A6EA1E7BE13 /* Release */,
				01087D76AD0C42F79843199C /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CDE94DEC9A6A44F9B3F0630E /* Build configuration list for PBXAggregateTarget "Nightly" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				31049EBAEDB34198BFCDBA20 /* Debug */,
				30B2EF018D94412184C28210 /* Release */,
				D1E59837BBC34FB7A68D6644 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D931E8526E2944ECACFC0272 /* Build configuration list for PBXNativeTarget "test_ph_scanner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				41285BB0A5CD42F3AC63521D /* Debug */,
				C3F28E0D9FF84776A510A092 /* Release */,
				91C9C5425AB44ECD9DAFE878 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E3050504E2DD4E799423CB75 /* Build configuration list for PBXNativeTarget "flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A24E64DF3A964A278A6F288F /* Debug */,
				7B616D559A0045CBB31FE749 /* Release */,
				32F80F982EB242CF9B0767DA /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E39C327947A541688A528CF6 /* Build configuration list for PBXAggregateTarget "run" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B0F192A495DE439AAB510B1E /* Debug */,
				33A707E0D7DC4716899C683D /* Release */,
				82B048A284574B51B51A0137 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E4939105F9CC447CBE1F0BB0 /* Build configuration list for PBXAggregateTarget "Continuous" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				59BF6443A6C64143BDDAB781 /* Debug */,
				8137343C01154BE0A151F7F3 /* Release */,
				516D1CBB47264A0E8134BE24 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 601ECEBA351544749103E0FF /* Project object */;
}
