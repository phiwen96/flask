// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		0AFEF793B78B4FF286BBF0D4 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = E361DA6A050548F3A21FCBB4 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				003C8D08B0008F35F218E126 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		5D957F3CAE7F455BA008A28D /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2A1DA1BC6480445D8FC3C57F /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				032D42A5130D483AB3FACE8C /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		5F9EAAC2997B4C449485D92A /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 97DC76CC19E54D0495B8BF21 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				A57B0D3CC6DADCDAFDFAFFB4 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				CADCE7CCE8E742DEBC0D189B /* PBXTargetDependency */,
				C866B6E08A3E4449A0DCEC96 /* PBXTargetDependency */,
				5F8164FB1D704ADCB451E305 /* PBXTargetDependency */,
				0DC97280BF3E460B84B989C1 /* PBXTargetDependency */,
				4087D8B6BAC1427A968B70FF /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		8BCC47B28AFF4D208282E0E3 /* Experimental */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 95EF202CDE7243C9A8706941 /* Build configuration list for PBXAggregateTarget "Experimental" */;
			buildPhases = (
				C4C9AA232F8F3A9EE88BD532 /* Generate CMakeFiles/Experimental */,
			);
			dependencies = (
				7EB93EE821F64E7C86DB1F27 /* PBXTargetDependency */,
			);
			name = Experimental;
			productName = Experimental;
		};
		8F7EA38EFB06478FAA432988 /* Nightly */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 9B7CAD4CCAFB439E8D4BEB32 /* Build configuration list for PBXAggregateTarget "Nightly" */;
			buildPhases = (
				AE5ED3F895600BE7461FC942 /* Generate CMakeFiles/Nightly */,
			);
			dependencies = (
				71C22C52378444779B355D4F /* PBXTargetDependency */,
			);
			name = Nightly;
			productName = Nightly;
		};
		93BED302D5AB46B1A20A308B /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = EC9349856EAF4AC08DAE2E16 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				05FE8F7C4FD198E33593F99D /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		D00236F8350B4BD4A76C0495 /* run */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C5E0107C676640C1A57686AF /* Build configuration list for PBXAggregateTarget "run" */;
			buildPhases = (
				DD66C68F859EAAB286F37050 /* Generate src/CMakeFiles/run */,
			);
			dependencies = (
				F29B151E5FF445B083D65C15 /* PBXTargetDependency */,
			);
			name = run;
			productName = run;
		};
		F1B35F975F0447D9A35249AE /* NightlyMemoryCheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = EC0DE93B20AE4D69A26D6A3A /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */;
			buildPhases = (
				0B4A4F3422DCE1F63972D19D /* Generate CMakeFiles/NightlyMemoryCheck */,
			);
			dependencies = (
				74FBE32D61D94401BF1E8B83 /* PBXTargetDependency */,
			);
			name = NightlyMemoryCheck;
			productName = NightlyMemoryCheck;
		};
		F48A737291E840ABB34AE52B /* Continuous */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 61333B8B48B440579008E032 /* Build configuration list for PBXAggregateTarget "Continuous" */;
			buildPhases = (
				01BDD19E726AAFBE4DD8582B /* Generate CMakeFiles/Continuous */,
			);
			dependencies = (
				0A3260137A084B05B8FDC158 /* PBXTargetDependency */,
			);
			name = Continuous;
			productName = Continuous;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		053D1E8158F848F79E190C1B /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = EDB20979B16442D9916C2D78 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */; };
		3EA414128C8143E694CCE48C /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = B9366E33993747178D9F2F43 /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */; };
		47673C5BD80D4AFFA06AEE2F /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = A14DF91C9FA94AC5903ACE9E /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */; };
		4F46D5F2140243FDB3ED8614 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = 07D9721CEDE141848CFB0A58 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */; };
		6248E4A462F44436AE6B9FF8 /* /Users/philipwenkel/Github/flask/src/flask.cpp */ = {isa = PBXBuildFile; fileRef = A24F247B7A30406789DFCBDF /* /Users/philipwenkel/Github/flask/src/flask.cpp */; };
		66A6630840FD4690961E377F /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */ = {isa = PBXBuildFile; fileRef = 98C3A1F65C644493924FACE3 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */; };
		6A4C60CCB47246A290E53CF7 /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = CA1D34F17555442D80FB4480 /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */; };
		6A7BFB27F74942D4A26A2B9B /* /Users/philipwenkel/Github/flask/src/main.cpp */ = {isa = PBXBuildFile; fileRef = 5FD2448E57D14FD29DCE14CA /* /Users/philipwenkel/Github/flask/src/main.cpp */; };
		6DC48390179F48AB8F96DD58 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */ = {isa = PBXBuildFile; fileRef = 6FBDDCEDFC6E47999D63D175 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */; };
		71E9B76916814E089DE152C0 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = CE07F57689E343129F55C2BE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */; };
		C4C6782E369C44E1A4A0AE2E /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */ = {isa = PBXBuildFile; fileRef = FAB25EADE5164A1F84D211E9 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */; };
		D082D09B96B84EEF85539BB7 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 0DD16EA2B5814D76BB2CD5EE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */; };
		E17E0FE45AFC43BEA6539935 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */ = {isa = PBXBuildFile; fileRef = F961F5C562A845C3978112B4 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */; };
		E86342152D2C414FA111E8CC /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = F0F0F24D5ED842A59A95608C /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */; };
		EC17FE2C37104E50BAB3D999 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */ = {isa = PBXBuildFile; fileRef = 4B2AF0EB83BD48FA9EE112A4 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */; };
		F780373953714A9F93358A9C /* /Users/philipwenkel/Github/flask/tests/test.cpp */ = {isa = PBXBuildFile; fileRef = 9D24F0CD1C11408584EBF4D3 /* /Users/philipwenkel/Github/flask/tests/test.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		21A3B4E3DF08430DA9CDFCB0 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
		75B6491FF7234CC09C557BEB /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		9672C94F80E24D5EA523F9F1 /* Kuk */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Kuk;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		0656596FCDBB4F8EB95E3C64 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		069B322AEBF6414696E1C318 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 67370F6B5532405499FF1085;
			remoteInfo = flask;
		};
		1B3EFAA42FBF4D0882C14B68 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		1CCDDF0FB6C24DC8B30B750D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 67370F6B5532405499FF1085;
			remoteInfo = flask;
		};
		38FFC6E6A5D540A2BA28274A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		777FD50405474B47A15DA2C9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		7AFFC46A6FA046A1B083A409 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		8640C9BD3BD2456593F8BFD4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5B841C89CF07450D9A268995;
			remoteInfo = ph_scanner;
		};
		8EC34505B74A425E959E0787 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 886B020EA713414EA4F07194;
			remoteInfo = test_ph_scanner;
		};
		AB9DD7563137476B9855DFE2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		BF15413DB0BF4AFC9F4285CC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FFF2FBC16E244076B08BC7CA;
			remoteInfo = test_flask;
		};
		C86A80B741A24558970A99BA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		CFF9AF8F79BE42B79B73C331 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		F0537B45507D482AB20ED30D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 601ECEBA351544749103E0FF /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5F9EAAC2997B4C449485D92A;
			remoteInfo = ALL_BUILD;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		07D9721CEDE141848CFB0A58 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = dependencies/ph_scanner/tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		0DD16EA2B5814D76BB2CD5EE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = dependencies/ph_scanner/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1E2B9838267447C9ACDDD384 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		37316CE5781B4F54A0D013FE /* flask */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = flask; sourceTree = BUILT_PRODUCTS_DIR; };
		3A256F1C85084084B2FBEA1D /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		47E070E931CD4471AFC562BF /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4B2AF0EB83BD48FA9EE112A4 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = scanner.hpp; path = dependencies/ph_scanner/include/ph_scanner/scanner.hpp; sourceTree = SOURCE_ROOT; };
		5FD2448E57D14FD29DCE14CA /* /Users/philipwenkel/Github/flask/src/main.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = main.cpp; path = src/main.cpp; sourceTree = SOURCE_ROOT; };
		6FBDDCEDFC6E47999D63D175 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test_vari.cpp; path = dependencies/ph_scanner/tests/test_vari.cpp; sourceTree = SOURCE_ROOT; };
		987C6091600F49D38075151B /* test_ph_scanner */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_ph_scanner; sourceTree = BUILT_PRODUCTS_DIR; };
		98C3A1F65C644493924FACE3 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flask.hpp; path = include/flask/flask.hpp; sourceTree = SOURCE_ROOT; };
		9D24F0CD1C11408584EBF4D3 /* /Users/philipwenkel/Github/flask/tests/test.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test.cpp; path = tests/test.cpp; sourceTree = SOURCE_ROOT; };
		9EB25709E1F64057B6E2F130 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A14DF91C9FA94AC5903ACE9E /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = dependencies/ph_scanner/tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
		A24F247B7A30406789DFCBDF /* /Users/philipwenkel/Github/flask/src/flask.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flask.cpp; path = src/flask.cpp; sourceTree = SOURCE_ROOT; };
		AA1A356A1B3744A7BD1662C5 /* ph_scanner */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libph_scanner.a; sourceTree = BUILT_PRODUCTS_DIR; };
		B9366E33993747178D9F2F43 /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		C9F4FD1E07194870AC76112A /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		CA1D34F17555442D80FB4480 /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		CE07F57689E343129F55C2BE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = dependencies/ph_scanner/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E31F6F346FFE48439CBDCD38 /* test_flask */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_flask; sourceTree = BUILT_PRODUCTS_DIR; };
		EDB20979B16442D9916C2D78 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F0F0F24D5ED842A59A95608C /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
		F6231CA9D3D44445863DB28C /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F961F5C562A845C3978112B4 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test_vari2.cpp; path = dependencies/ph_scanner/tests/test_vari2.cpp; sourceTree = SOURCE_ROOT; };
		FAB25EADE5164A1F84D211E9 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = scanner.cpp; path = dependencies/ph_scanner/src/scanner.cpp; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		888050634310417291F92F2D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BBE75E83CB654B35804CC68B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DEEE116B2B0945BD84F50D17 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F619323E527F4F40AD9CA158 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		061AE6C818EC4F02A387C928 = {
			isa = PBXGroup;
			children = (
				12A80DE2593F40ACBC816A55 /* CTestDashboardTargets */,
				A86D313B8E47426082A4056C /* ALL_BUILD */,
				D474CE4E10E04C3E9A04AC15 /* dependencies */,
				0FF7BE3CD90A4C8A83C14FBD /* run */,
				78C2D2FF978F40A3895D8550 /* flask */,
				ED8F9C91C86C4B599D9FB8FB /* Products */,
				112D9B64DB824B29B0EE464A /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		0C4783CED62E44E1BB1813C9 /* Nightly */ = {
			isa = PBXGroup;
			children = (
				AE0BD5E92C9C422DB957653F /* CMake Rules */,
				1E2B9838267447C9ACDDD384 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = Nightly;
			sourceTree = "<group>";
		};
		0FF7BE3CD90A4C8A83C14FBD /* run */ = {
			isa = PBXGroup;
			children = (
				6C0E6BB5E6714E8FA7C84D53 /* CMake Rules */,
				9EB25709E1F64057B6E2F130 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */,
			);
			name = run;
			sourceTree = "<group>";
		};
		112D9B64DB824B29B0EE464A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		12A80DE2593F40ACBC816A55 /* CTestDashboardTargets */ = {
			isa = PBXGroup;
			children = (
				E965D6B262CD40C4BC9C36BF /* NightlyMemoryCheck */,
				0C4783CED62E44E1BB1813C9 /* Nightly */,
				C7B91002F51840669D3434A0 /* Continuous */,
				96DCB975F5924B7A904C224B /* Experimental */,
			);
			name = CTestDashboardTargets;
			sourceTree = "<group>";
		};
		1428CCA2FE84424B9AEF98AA /* Header Files */ = {
			isa = PBXGroup;
			children = (
				B9366E33993747178D9F2F43 /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		1E3FBFA6101E431CB8418967 /* headers */ = {
			isa = PBXGroup;
			children = (
				98C3A1F65C644493924FACE3 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */,
			);
			name = headers;
			sourceTree = "<group>";
		};
		210C4FCC7D424FD7B20507E0 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				07D9721CEDE141848CFB0A58 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		3B765B759271403AB7A3369C /* ph_scanner */ = {
			isa = PBXGroup;
			children = (
				52C259C412FD41BCB014C122 /* ph_scanner */,
				4B8872F34E314F5E981E1B21 /* test_ph_scanner */,
			);
			name = ph_scanner;
			sourceTree = "<group>";
		};
		3DEFAC980F144988883A4787 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				4B2AF0EB83BD48FA9EE112A4 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner/scanner.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		4B8872F34E314F5E981E1B21 /* test_ph_scanner */ = {
			isa = PBXGroup;
			children = (
				80B7FBB3377C4078B2B89172 /* Source Files */,
				210C4FCC7D424FD7B20507E0 /* Header Files */,
				CE07F57689E343129F55C2BE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/CMakeLists.txt */,
			);
			name = test_ph_scanner;
			sourceTree = "<group>";
		};
		4BE7D887B9664AC7BC2DA3C1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				9D24F0CD1C11408584EBF4D3 /* /Users/philipwenkel/Github/flask/tests/test.cpp */,
				F0F0F24D5ED842A59A95608C /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		52C259C412FD41BCB014C122 /* ph_scanner */ = {
			isa = PBXGroup;
			children = (
				B88BEB416D21429087D460DE /* Source Files */,
				3DEFAC980F144988883A4787 /* Header Files */,
				0DD16EA2B5814D76BB2CD5EE /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/CMakeLists.txt */,
			);
			name = ph_scanner;
			sourceTree = "<group>";
		};
		554B63141D9B4D74840ED06C /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		6C0E6BB5E6714E8FA7C84D53 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		75E1EDD1A4D14AA9B17FE442 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		78C2D2FF978F40A3895D8550 /* flask */ = {
			isa = PBXGroup;
			children = (
				88639AEF0A6342E0928B895F /* sources */,
				1E3FBFA6101E431CB8418967 /* headers */,
				D708D4756ECF429D99AE27D9 /* _ */,
				EDB20979B16442D9916C2D78 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */,
			);
			name = flask;
			sourceTree = "<group>";
		};
		80B7FBB3377C4078B2B89172 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6FBDDCEDFC6E47999D63D175 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */,
				F961F5C562A845C3978112B4 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */,
				A14DF91C9FA94AC5903ACE9E /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		88639AEF0A6342E0928B895F /* sources */ = {
			isa = PBXGroup;
			children = (
				A24F247B7A30406789DFCBDF /* /Users/philipwenkel/Github/flask/src/flask.cpp */,
				5FD2448E57D14FD29DCE14CA /* /Users/philipwenkel/Github/flask/src/main.cpp */,
			);
			name = sources;
			sourceTree = "<group>";
		};
		96DCB975F5924B7A904C224B /* Experimental */ = {
			isa = PBXGroup;
			children = (
				75E1EDD1A4D14AA9B17FE442 /* CMake Rules */,
				47E070E931CD4471AFC562BF /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = Experimental;
			sourceTree = "<group>";
		};
		A86D313B8E47426082A4056C /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				554B63141D9B4D74840ED06C /* CMake Rules */,
				F6231CA9D3D44445863DB28C /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		AE0BD5E92C9C422DB957653F /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		B1398561F3DB4B73B6DED074 /* test_flask */ = {
			isa = PBXGroup;
			children = (
				4BE7D887B9664AC7BC2DA3C1 /* Source Files */,
				1428CCA2FE84424B9AEF98AA /* Header Files */,
				CA1D34F17555442D80FB4480 /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */,
			);
			name = test_flask;
			sourceTree = "<group>";
		};
		B88BEB416D21429087D460DE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FAB25EADE5164A1F84D211E9 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C7B91002F51840669D3434A0 /* Continuous */ = {
			isa = PBXGroup;
			children = (
				F3B67121D98D496E8BDBB703 /* CMake Rules */,
				3A256F1C85084084B2FBEA1D /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = Continuous;
			sourceTree = "<group>";
		};
		D474CE4E10E04C3E9A04AC15 /* dependencies */ = {
			isa = PBXGroup;
			children = (
				3B765B759271403AB7A3369C /* ph_scanner */,
			);
			name = dependencies;
			sourceTree = "<group>";
		};
		D708D4756ECF429D99AE27D9 /* _ */ = {
			isa = PBXGroup;
			children = (
				B1398561F3DB4B73B6DED074 /* test_flask */,
			);
			name = _;
			sourceTree = "<group>";
		};
		E965D6B262CD40C4BC9C36BF /* NightlyMemoryCheck */ = {
			isa = PBXGroup;
			children = (
				FE9288B6CD674F9C84A50A19 /* CMake Rules */,
				C9F4FD1E07194870AC76112A /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = NightlyMemoryCheck;
			sourceTree = "<group>";
		};
		ED8F9C91C86C4B599D9FB8FB /* Products */ = {
			isa = PBXGroup;
			children = (
				37316CE5781B4F54A0D013FE /* flask */,
				AA1A356A1B3744A7BD1662C5 /* ph_scanner */,
				E31F6F346FFE48439CBDCD38 /* test_flask */,
				987C6091600F49D38075151B /* test_ph_scanner */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		F3B67121D98D496E8BDBB703 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		FE9288B6CD674F9C84A50A19 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		5B841C89CF07450D9A268995 /* ph_scanner */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 82204550810C43D78F69EC58 /* Build configuration list for PBXNativeTarget "ph_scanner" */;
			buildPhases = (
				FABB794CAD2E456AA71B269E /* Sources */,
				888050634310417291F92F2D /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ph_scanner;
			productName = ph_scanner;
			productReference = AA1A356A1B3744A7BD1662C5 /* ph_scanner */;
			productType = "com.apple.product-type.library.static";
		};
		67370F6B5532405499FF1085 /* flask */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9EA40654D70347829A410F6C /* Build configuration list for PBXNativeTarget "flask" */;
			buildPhases = (
				7AAC2FA3811F4C8ABCECBDB7 /* Sources */,
				F619323E527F4F40AD9CA158 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3BD07F6EA4504E0FA3B8A8D3 /* PBXTargetDependency */,
			);
			name = flask;
			productName = flask;
			productReference = 37316CE5781B4F54A0D013FE /* flask */;
			productType = "com.apple.product-type.tool";
		};
		886B020EA713414EA4F07194 /* test_ph_scanner */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C4590C653938415B9869AE6C /* Build configuration list for PBXNativeTarget "test_ph_scanner" */;
			buildPhases = (
				88B9687A5C0042309293501C /* Sources */,
				BBE75E83CB654B35804CC68B /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				460895279D1848B6AB71BEEA /* PBXTargetDependency */,
			);
			name = test_ph_scanner;
			productName = test_ph_scanner;
			productReference = 987C6091600F49D38075151B /* test_ph_scanner */;
			productType = "com.apple.product-type.tool";
		};
		FFF2FBC16E244076B08BC7CA /* test_flask */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A7D1309E6D2944C89115BF6C /* Build configuration list for PBXNativeTarget "test_flask" */;
			buildPhases = (
				F20E53D2B0B2453EBE22BAD1 /* Sources */,
				DEEE116B2B0945BD84F50D17 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				BF5DE92338E94A0B9B33AD76 /* PBXTargetDependency */,
			);
			name = test_flask;
			productName = test_flask;
			productReference = E31F6F346FFE48439CBDCD38 /* test_flask */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		601ECEBA351544749103E0FF /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = 5D380CE6BA094D1C838F1F9B /* Build configuration list for PBXProject "flask" */;
			buildSettings = {
			};
			buildStyles = (
				75B6491FF7234CC09C557BEB /* Debug */,
				21A3B4E3DF08430DA9CDFCB0 /* Release */,
				9672C94F80E24D5EA523F9F1 /* Kuk */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = 061AE6C818EC4F02A387C928;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				5F9EAAC2997B4C449485D92A /* ALL_BUILD */,
				F48A737291E840ABB34AE52B /* Continuous */,
				8BCC47B28AFF4D208282E0E3 /* Experimental */,
				8F7EA38EFB06478FAA432988 /* Nightly */,
				F1B35F975F0447D9A35249AE /* NightlyMemoryCheck */,
				0AFEF793B78B4FF286BBF0D4 /* RUN_TESTS */,
				93BED302D5AB46B1A20A308B /* ZERO_CHECK */,
				67370F6B5532405499FF1085 /* flask */,
				5D957F3CAE7F455BA008A28D /* install */,
				5B841C89CF07450D9A268995 /* ph_scanner */,
				D00236F8350B4BD4A76C0495 /* run */,
				FFF2FBC16E244076B08BC7CA /* test_flask */,
				886B020EA713414EA4F07194 /* test_ph_scanner */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		003C8D08B0008F35F218E126 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
";
			showEnvVarsInLog = 0;
		};
		01BDD19E726AAFBE4DD8582B /* Generate CMakeFiles/Continuous */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Continuous";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/Continuous			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
";
			showEnvVarsInLog = 0;
		};
		05FE8F7C4FD198E33593F99D /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/ZERO_CHECK			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		09FB783FD30DC6E66DF354AF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		0B4A4F3422DCE1F63972D19D /* Generate CMakeFiles/NightlyMemoryCheck */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/NightlyMemoryCheck";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/NightlyMemoryCheck			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
";
			showEnvVarsInLog = 0;
		};
		23E0E19C1FE635DB84934AD9 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		323E6CE94951678BF055CC89 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		6F99315A684C6A073F49EF1D = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		87AF4882E018677E2624B544 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		910A41151295C5F9742C25BD = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A57B0D3CC6DADCDAFDFAFFB4 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/ALL_BUILD			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		A68D7F74133ED74D8658B427 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		AE5ED3F895600BE7461FC942 /* Generate CMakeFiles/Nightly */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Nightly";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/Nightly			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
";
			showEnvVarsInLog = 0;
		};
		C4C9AA232F8F3A9EE88BD532 /* Generate CMakeFiles/Experimental */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Experimental";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/Experimental			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
";
			showEnvVarsInLog = 0;
		};
		DD66C68F859EAAB286F37050 /* Generate src/CMakeFiles/run */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate src/CMakeFiles/run";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/run			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/src
  /Users/philipwenkel/Github/flask/xbuild/src/Debug/flask
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/src
  /Users/philipwenkel/Github/flask/xbuild/src/Release/flask
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/src
  /Users/philipwenkel/Github/flask/xbuild/src/Kuk/flask
fi
";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		7AAC2FA3811F4C8ABCECBDB7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6248E4A462F44436AE6B9FF8 /* /Users/philipwenkel/Github/flask/src/flask.cpp */,
				6A7BFB27F74942D4A26A2B9B /* /Users/philipwenkel/Github/flask/src/main.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		88B9687A5C0042309293501C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6DC48390179F48AB8F96DD58 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari.cpp */,
				E17E0FE45AFC43BEA6539935 /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/test_vari2.cpp */,
				47673C5BD80D4AFFA06AEE2F /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F20E53D2B0B2453EBE22BAD1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F780373953714A9F93358A9C /* /Users/philipwenkel/Github/flask/tests/test.cpp */,
				E86342152D2C414FA111E8CC /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FABB794CAD2E456AA71B269E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C4C6782E369C44E1A4A0AE2E /* /Users/philipwenkel/Github/flask/dependencies/ph_scanner/src/scanner.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		032D42A5130D483AB3FACE8C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5F9EAAC2997B4C449485D92A /* ALL_BUILD */;
			targetProxy = F0537B45507D482AB20ED30D /* PBXContainerItemProxy */;
		};
		0A3260137A084B05B8FDC158 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = AB9DD7563137476B9855DFE2 /* PBXContainerItemProxy */;
		};
		0DC97280BF3E460B84B989C1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FFF2FBC16E244076B08BC7CA /* test_flask */;
			targetProxy = BF15413DB0BF4AFC9F4285CC /* PBXContainerItemProxy */;
		};
		3BD07F6EA4504E0FA3B8A8D3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 38FFC6E6A5D540A2BA28274A /* PBXContainerItemProxy */;
		};
		4087D8B6BAC1427A968B70FF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = C86A80B741A24558970A99BA /* PBXContainerItemProxy */;
		};
		460895279D1848B6AB71BEEA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 0656596FCDBB4F8EB95E3C64 /* PBXContainerItemProxy */;
		};
		5F8164FB1D704ADCB451E305 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 67370F6B5532405499FF1085 /* flask */;
			targetProxy = 1CCDDF0FB6C24DC8B30B750D /* PBXContainerItemProxy */;
		};
		71C22C52378444779B355D4F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = CFF9AF8F79BE42B79B73C331 /* PBXContainerItemProxy */;
		};
		74FBE32D61D94401BF1E8B83 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 7AFFC46A6FA046A1B083A409 /* PBXContainerItemProxy */;
		};
		7EB93EE821F64E7C86DB1F27 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 777FD50405474B47A15DA2C9 /* PBXContainerItemProxy */;
		};
		BF5DE92338E94A0B9B33AD76 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 8640C9BD3BD2456593F8BFD4 /* PBXContainerItemProxy */;
		};
		C866B6E08A3E4449A0DCEC96 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 886B020EA713414EA4F07194 /* test_ph_scanner */;
			targetProxy = 8EC34505B74A425E959E0787 /* PBXContainerItemProxy */;
		};
		CADCE7CCE8E742DEBC0D189B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5B841C89CF07450D9A268995 /* ph_scanner */;
			targetProxy = 1B3EFAA42FBF4D0882C14B68 /* PBXContainerItemProxy */;
		};
		F29B151E5FF445B083D65C15 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 67370F6B5532405499FF1085 /* flask */;
			targetProxy = 069B322AEBF6414696E1C318 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		094BB8E633474B7E8597BE41 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		0C17544BBB6C4AFA9A687662 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		0D2EAD439AAD4C59A6B240E4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		109255AC90C648AD9DFACF3F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests/CMakeFiles/test_ph_scanner.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Debug/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests;
				SYSTEM_HEADER_SEARCH_PATHS = (/opt/homebrew/include,"$(inherited)");
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		224735EB3BED49ACBE3B7C3C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		26E4D15502024CF3B0E4E31D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		2D735B6F6EFA4A6F9ACAA0BE /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests/CMakeFiles/test_ph_scanner.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Kuk/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests;
				SYSTEM_HEADER_SEARCH_PATHS = (/opt/homebrew/include,"$(inherited)");
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		3A39F40F0B394FA9B17C13B5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Debug;
		};
		42B06FAB234F4F98ADA1602A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests/CMakeFiles/test_ph_scanner.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Release/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/tests;
				SYSTEM_HEADER_SEARCH_PATHS = (/opt/homebrew/include,"$(inherited)");
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		52AA902BCCE1442680A90A32 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		52C96124B7D147F28392B4CC /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/include/flask,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Kuk/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		53CF2E0CDE37440AA73BD710 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts     -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Release/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		56AADDAB651F46768143620E /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		56C956E7154E4FE8A6926477 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = run;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		57A96D9526DC49FABC590D42 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/CMakeFiles/ph_scanner.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		64C1D7FFC96548838202F217 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		67FDAFE6027046FE8AB527B2 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		68570A1EA9B1429084C7BD91 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		76556C2E95524E8FAD14D763 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Release;
		};
		78AAA7F641D2462F9AFB5DC4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		7A1A0588371B4A5E862DE29B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		8B32A222B86D46BAB769B716 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		8EB985606B474C14BF691050 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		95F5FDC483CC47BA984DE082 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		975A7A5AFD2A4C3CB14C8B48 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		9D4E6E1C0DC8495EB5633593 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/include/flask,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts     -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Release/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		A2FA65535F03440281C33A94 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		A8638039BE784164A9EE2C3D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/CMakeFiles/ph_scanner.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		A96F5229501546E8A207CB3A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		A9BA64C47C5D40588639FB64 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Kuk;
		};
		BF7EF113F74E4775BCB782ED /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		D51392356D0A40609C05FD8D /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = run;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		D6C1F8436BAB4D1F883C18B5 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		D7BBA07C4CD946ABBCBB50CE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		D8580B5A51924F329C791BCE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		D929D91812344A87BA358CBD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts    '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Debug/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		D9A8BE8A0D7549D2AE3C96DE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/include/flask,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts    '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Debug/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		ECE64644A01E414B85028380 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = run;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		EDF049DC0115421FBDA19800 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/CMakeFiles/ph_scanner.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include/ph_scanner,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ph_scanner;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		F16BD79F32EC4925BC3A8DAD /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/ph_scanner/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/ph_scanner/src/Kuk/libph_scanner.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		F33B5F09E6D94290A9498EB2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		FCD2A431B6CA49498FEEADC4 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		2A1DA1BC6480445D8FC3C57F /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D8580B5A51924F329C791BCE /* Debug */,
				7A1A0588371B4A5E862DE29B /* Release */,
				68570A1EA9B1429084C7BD91 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5D380CE6BA094D1C838F1F9B /* Build configuration list for PBXProject "flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3A39F40F0B394FA9B17C13B5 /* Debug */,
				76556C2E95524E8FAD14D763 /* Release */,
				A9BA64C47C5D40588639FB64 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		61333B8B48B440579008E032 /* Build configuration list for PBXAggregateTarget "Continuous" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				78AAA7F641D2462F9AFB5DC4 /* Debug */,
				8EB985606B474C14BF691050 /* Release */,
				64C1D7FFC96548838202F217 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		82204550810C43D78F69EC58 /* Build configuration list for PBXNativeTarget "ph_scanner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A8638039BE784164A9EE2C3D /* Debug */,
				EDF049DC0115421FBDA19800 /* Release */,
				57A96D9526DC49FABC590D42 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		95EF202CDE7243C9A8706941 /* Build configuration list for PBXAggregateTarget "Experimental" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BF7EF113F74E4775BCB782ED /* Debug */,
				975A7A5AFD2A4C3CB14C8B48 /* Release */,
				67FDAFE6027046FE8AB527B2 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		97DC76CC19E54D0495B8BF21 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A96F5229501546E8A207CB3A /* Debug */,
				F33B5F09E6D94290A9498EB2 /* Release */,
				A2FA65535F03440281C33A94 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9B7CAD4CCAFB439E8D4BEB32 /* Build configuration list for PBXAggregateTarget "Nightly" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				26E4D15502024CF3B0E4E31D /* Debug */,
				0D2EAD439AAD4C59A6B240E4 /* Release */,
				0C17544BBB6C4AFA9A687662 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9EA40654D70347829A410F6C /* Build configuration list for PBXNativeTarget "flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D9A8BE8A0D7549D2AE3C96DE /* Debug */,
				9D4E6E1C0DC8495EB5633593 /* Release */,
				52C96124B7D147F28392B4CC /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A7D1309E6D2944C89115BF6C /* Build configuration list for PBXNativeTarget "test_flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D929D91812344A87BA358CBD /* Debug */,
				53CF2E0CDE37440AA73BD710 /* Release */,
				F16BD79F32EC4925BC3A8DAD /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C4590C653938415B9869AE6C /* Build configuration list for PBXNativeTarget "test_ph_scanner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				109255AC90C648AD9DFACF3F /* Debug */,
				42B06FAB234F4F98ADA1602A /* Release */,
				2D735B6F6EFA4A6F9ACAA0BE /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C5E0107C676640C1A57686AF /* Build configuration list for PBXAggregateTarget "run" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ECE64644A01E414B85028380 /* Debug */,
				56C956E7154E4FE8A6926477 /* Release */,
				D51392356D0A40609C05FD8D /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E361DA6A050548F3A21FCBB4 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D7BBA07C4CD946ABBCBB50CE /* Debug */,
				8B32A222B86D46BAB769B716 /* Release */,
				FCD2A431B6CA49498FEEADC4 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EC0DE93B20AE4D69A26D6A3A /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				95F5FDC483CC47BA984DE082 /* Debug */,
				224735EB3BED49ACBE3B7C3C /* Release */,
				D6C1F8436BAB4D1F883C18B5 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EC9349856EAF4AC08DAE2E16 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				094BB8E633474B7E8597BE41 /* Debug */,
				52AA902BCCE1442680A90A32 /* Release */,
				56AADDAB651F46768143620E /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 601ECEBA351544749103E0FF /* Project object */;
}
