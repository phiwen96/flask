// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		0AFEF793B78B4FF286BBF0D4 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = FF1DB1E16CD04E72AC7AEA00 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				003C8D08B0008F35F218E126 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		5D957F3CAE7F455BA008A28D /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 49BC8EFA14B84308BE6882BB /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				8E171B30ACBF4BBD80F9B88B /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		5F9EAAC2997B4C449485D92A /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = CA177AF9AFAD40ED84503586 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				2CBA29E12CA3F0BC402A4725 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				83EF227C71D94D7A92B19B74 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		8BCC47B28AFF4D208282E0E3 /* Experimental */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = EC2F3E4347A9411886AEF187 /* Build configuration list for PBXAggregateTarget "Experimental" */;
			buildPhases = (
				2AAA6F380B5FC4B2D1DB1032 /* Generate CMakeFiles/Experimental */,
			);
			dependencies = (
				82417477A0774069B951591E /* PBXTargetDependency */,
			);
			name = Experimental;
			productName = Experimental;
		};
		8F7EA38EFB06478FAA432988 /* Nightly */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 631F31CCAE93415DBFAC66FC /* Build configuration list for PBXAggregateTarget "Nightly" */;
			buildPhases = (
				9834A9C8ACB92F60F997530D /* Generate CMakeFiles/Nightly */,
			);
			dependencies = (
				DE9CC24B245446C889AB1630 /* PBXTargetDependency */,
			);
			name = Nightly;
			productName = Nightly;
		};
		93BED302D5AB46B1A20A308B /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 3FAB52B04B0542E0898C1C0D /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				A7F30E3BCF8D44FB34B8E0E5 /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		F1B35F975F0447D9A35249AE /* NightlyMemoryCheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = AD67B8FB48A74C1AB082FD6C /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */;
			buildPhases = (
				E9BF10CCF20463D90CCEA37E /* Generate CMakeFiles/NightlyMemoryCheck */,
			);
			dependencies = (
				BE1A634E56E946F29810D53E /* PBXTargetDependency */,
			);
			name = NightlyMemoryCheck;
			productName = NightlyMemoryCheck;
		};
		F48A737291E840ABB34AE52B /* Continuous */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 332D4EC852664FA786D26335 /* Build configuration list for PBXAggregateTarget "Continuous" */;
			buildPhases = (
				83432DB9F157F2B3825D919E /* Generate CMakeFiles/Continuous */,
			);
			dependencies = (
				72A40BCD934645DA8434196E /* PBXTargetDependency */,
			);
			name = Continuous;
			productName = Continuous;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildStyle section */
		4B2AF6521021472B82D7D17E /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
		4F9E4D09438B44FF8C4398BE /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		9C61BBC5262A4F06BA6113A5 /* Kuk */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Kuk;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		33834FE2158F4CEAB9574EF6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D3105AC3988414FB76781B6 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		3739E29CD73C4ECA83EDBE45 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D3105AC3988414FB76781B6 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		924F90F2A02D461797DF2598 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D3105AC3988414FB76781B6 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		99CE9D5B55544F65A7D8FA33 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D3105AC3988414FB76781B6 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5F9EAAC2997B4C449485D92A;
			remoteInfo = ALL_BUILD;
		};
		B6D3399DE9434435A2948278 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D3105AC3988414FB76781B6 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
		BEA736C5EEB04C8BAF05DB43 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D3105AC3988414FB76781B6 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93BED302D5AB46B1A20A308B;
			remoteInfo = ZERO_CHECK;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		08E7258939124B99B166E20F /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		17D3D5FC937B418EA68AE941 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3CE593A4225940CB9117642E /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F01AF2DFC2904D0FB36B099E /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F2928A22C7E44C95B7E92669 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		2450FDE7CC24466B9BB0B949 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2D8C5FC95D7240659CA687F7 = {
			isa = PBXGroup;
			children = (
				5814FBB16FEA4E8189344B1C /* CTestDashboardTargets */,
				329058019F884C4D9461689C /* ALL_BUILD */,
				565648F548B6476AAA9526F2 /* Products */,
				79716ACFCD8D4F12BAB7CA75 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		329058019F884C4D9461689C /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				CDA29536E39D47ADB7D594B8 /* CMake Rules */,
				3CE593A4225940CB9117642E /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		3A5DD9087C244A3FB359FDD5 /* Nightly */ = {
			isa = PBXGroup;
			children = (
				6945928E316F4280A245FD05 /* CMake Rules */,
				17D3D5FC937B418EA68AE941 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Nightly;
			sourceTree = "<group>";
		};
		443715BDBFB54EE58999A5FF /* Continuous */ = {
			isa = PBXGroup;
			children = (
				8FB79E11E7FE40F192E24EB9 /* CMake Rules */,
				F2928A22C7E44C95B7E92669 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Continuous;
			sourceTree = "<group>";
		};
		565648F548B6476AAA9526F2 /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		5814FBB16FEA4E8189344B1C /* CTestDashboardTargets */ = {
			isa = PBXGroup;
			children = (
				D7C907B0BAEE4CDC8C50D0C0 /* NightlyMemoryCheck */,
				3A5DD9087C244A3FB359FDD5 /* Nightly */,
				443715BDBFB54EE58999A5FF /* Continuous */,
				B2C2B993DBE04ADE8C3D7060 /* Experimental */,
			);
			name = CTestDashboardTargets;
			sourceTree = "<group>";
		};
		6945928E316F4280A245FD05 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		79716ACFCD8D4F12BAB7CA75 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		7EF393B19B9341DF8E294E5F /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		8FB79E11E7FE40F192E24EB9 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		B2C2B993DBE04ADE8C3D7060 /* Experimental */ = {
			isa = PBXGroup;
			children = (
				2450FDE7CC24466B9BB0B949 /* CMake Rules */,
				F01AF2DFC2904D0FB36B099E /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Experimental;
			sourceTree = "<group>";
		};
		CDA29536E39D47ADB7D594B8 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		D7C907B0BAEE4CDC8C50D0C0 /* NightlyMemoryCheck */ = {
			isa = PBXGroup;
			children = (
				7EF393B19B9341DF8E294E5F /* CMake Rules */,
				08E7258939124B99B166E20F /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = NightlyMemoryCheck;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		1D3105AC3988414FB76781B6 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = B6FE8DCA0AD34A42840D9961 /* Build configuration list for PBXProject "Catch2" */;
			buildSettings = {
			};
			buildStyles = (
				4F9E4D09438B44FF8C4398BE /* Debug */,
				4B2AF6521021472B82D7D17E /* Release */,
				9C61BBC5262A4F06BA6113A5 /* Kuk */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = 2D8C5FC95D7240659CA687F7;
			projectDirPath = "../catch-src";
			projectRoot = "";
			targets = (
				5F9EAAC2997B4C449485D92A /* ALL_BUILD */,
				F48A737291E840ABB34AE52B /* Continuous */,
				8BCC47B28AFF4D208282E0E3 /* Experimental */,
				8F7EA38EFB06478FAA432988 /* Nightly */,
				F1B35F975F0447D9A35249AE /* NightlyMemoryCheck */,
				0AFEF793B78B4FF286BBF0D4 /* RUN_TESTS */,
				93BED302D5AB46B1A20A308B /* ZERO_CHECK */,
				5D957F3CAE7F455BA008A28D /* install */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		003C8D08B0008F35F218E126 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
";
			showEnvVarsInLog = 0;
		};
		09FB783FD30DC6E66DF354AF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		23E0E19C1FE635DB84934AD9 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		2AAA6F380B5FC4B2D1DB1032 /* Generate CMakeFiles/Experimental */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Experimental";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Experimental"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
";
			showEnvVarsInLog = 0;
		};
		2CBA29E12CA3F0BC402A4725 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/ALL_BUILD"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		323E6CE94951678BF055CC89 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		83432DB9F157F2B3825D919E /* Generate CMakeFiles/Continuous */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Continuous";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Continuous"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
";
			showEnvVarsInLog = 0;
		};
		87AF4882E018677E2624B544 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		910A41151295C5F9742C25BD = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
";
			showEnvVarsInLog = 0;
		};
		9834A9C8ACB92F60F997530D /* Generate CMakeFiles/Nightly */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/Nightly";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Nightly"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A68D7F74133ED74D8658B427 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A7F30E3BCF8D44FB34B8E0E5 /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/ZERO_CHECK"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		E9BF10CCF20463D90CCEA37E /* Generate CMakeFiles/NightlyMemoryCheck */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/NightlyMemoryCheck";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/NightlyMemoryCheck"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXTargetDependency section */
		72A40BCD934645DA8434196E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 924F90F2A02D461797DF2598 /* PBXContainerItemProxy */;
		};
		82417477A0774069B951591E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = B6D3399DE9434435A2948278 /* PBXContainerItemProxy */;
		};
		83EF227C71D94D7A92B19B74 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = BEA736C5EEB04C8BAF05DB43 /* PBXContainerItemProxy */;
		};
		8E171B30ACBF4BBD80F9B88B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5F9EAAC2997B4C449485D92A /* ALL_BUILD */;
			targetProxy = 99CE9D5B55544F65A7D8FA33 /* PBXContainerItemProxy */;
		};
		BE1A634E56E946F29810D53E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 3739E29CD73C4ECA83EDBE45 /* PBXContainerItemProxy */;
		};
		DE9CC24B245446C889AB1630 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93BED302D5AB46B1A20A308B /* ZERO_CHECK */;
			targetProxy = 33834FE2158F4CEAB9574EF6 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		050D1D649D8F4417B54FAC12 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		0ED16BB92CCB4A7CA7833429 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		1B1F2A0319044DD7A7274C0C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		21025066AA9047AB8EC820A8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		2398D6B343A34E0EBA07D70F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/build";
			};
			name = Debug;
		};
		373B1135D1284BF49F2BE507 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/build";
			};
			name = Release;
		};
		38416F32EEE345F8BA3DC082 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		3890708B6E1E4A9482C1006E /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		40F75C1854E44DC6A28DF9B9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		4E16384A71524A1FABC298DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		4E875D8C488F4D9F897A7AAD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		79E0A01657F94DAA8D404B4D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		89D7F610279C4768AA77109C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		994EB7DA1446439BA14323EB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		AA51139F6B3F447C86D80495 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		ADB2042EE2814A1A9E776B25 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		B5553F897A6C4753B3A25F2A /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		B5B5EAE4B21046AD8EA57440 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		B70736D2184846E8BD127E42 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		B934D1E96D6B47A7B26753E2 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		D26C82779C9D481E8BDE4C53 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		D80FEE4197BF4873B9602BCA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		D9C712DECD8544889C33CA97 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		E34F14D22F18448892C2759E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		EE930D053A234FAC96693E4D /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		F54C8DC8EC2F4F58AE7E8C2D /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/build";
			};
			name = Kuk;
		};
		FB69451ACDDB4890862E568F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		332D4EC852664FA786D26335 /* Build configuration list for PBXAggregateTarget "Continuous" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1B1F2A0319044DD7A7274C0C /* Debug */,
				D80FEE4197BF4873B9602BCA /* Release */,
				B934D1E96D6B47A7B26753E2 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3FAB52B04B0542E0898C1C0D /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B5B5EAE4B21046AD8EA57440 /* Debug */,
				B70736D2184846E8BD127E42 /* Release */,
				38416F32EEE345F8BA3DC082 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		49BC8EFA14B84308BE6882BB /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D26C82779C9D481E8BDE4C53 /* Debug */,
				79E0A01657F94DAA8D404B4D /* Release */,
				AA51139F6B3F447C86D80495 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		631F31CCAE93415DBFAC66FC /* Build configuration list for PBXAggregateTarget "Nightly" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E34F14D22F18448892C2759E /* Debug */,
				21025066AA9047AB8EC820A8 /* Release */,
				B5553F897A6C4753B3A25F2A /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AD67B8FB48A74C1AB082FD6C /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D9C712DECD8544889C33CA97 /* Debug */,
				FB69451ACDDB4890862E568F /* Release */,
				3890708B6E1E4A9482C1006E /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B6FE8DCA0AD34A42840D9961 /* Build configuration list for PBXProject "Catch2" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2398D6B343A34E0EBA07D70F /* Debug */,
				373B1135D1284BF49F2BE507 /* Release */,
				F54C8DC8EC2F4F58AE7E8C2D /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CA177AF9AFAD40ED84503586 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89D7F610279C4768AA77109C /* Debug */,
				0ED16BB92CCB4A7CA7833429 /* Release */,
				ADB2042EE2814A1A9E776B25 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EC2F3E4347A9411886AEF187 /* Build configuration list for PBXAggregateTarget "Experimental" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				40F75C1854E44DC6A28DF9B9 /* Debug */,
				994EB7DA1446439BA14323EB /* Release */,
				050D1D649D8F4417B54FAC12 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FF1DB1E16CD04E72AC7AEA00 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4E875D8C488F4D9F897A7AAD /* Debug */,
				4E16384A71524A1FABC298DF /* Release */,
				EE930D053A234FAC96693E4D /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1D3105AC3988414FB76781B6 /* Project object */;
}
