// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		12D3F9CEE9234740A971E729 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = AFAE3F976BE24C298542F214 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				B1715C62CB404036B587B374 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		1DAD8EEA34F043B88480E3AB /* NightlyMemoryCheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 634D03450645470CA997C57E /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */;
			buildPhases = (
				E9BF10CCF20463D90CCEA37E /* Generate _deps/catch-build/CMakeFiles/NightlyMemoryCheck */,
			);
			dependencies = (
			);
			name = NightlyMemoryCheck;
			productName = NightlyMemoryCheck;
		};
		24C1E39ED1DD456DB999C90F /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = F65EB51073FD4887B7BBD4F6 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				A57B0D3CC6DADCDAFDFAFFB4 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				99918BACACCF4679B36AF72F /* PBXTargetDependency */,
				8B84A9F4D9C54A3D98CD8B7A /* PBXTargetDependency */,
				A5B8EBA325E149C6A604F14B /* PBXTargetDependency */,
				F088F18D3C704E83A317BE48 /* PBXTargetDependency */,
				94409A960CE44D888D0D8582 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		25A4F9311DC347598D7CF4B3 /* Continuous */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = DD0317008AF14FC3B31E1EC7 /* Build configuration list for PBXAggregateTarget "Continuous" */;
			buildPhases = (
				83432DB9F157F2B3825D919E /* Generate _deps/catch-build/CMakeFiles/Continuous */,
			);
			dependencies = (
			);
			name = Continuous;
			productName = Continuous;
		};
		4E34A062908746FDA1960930 /* Experimental */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2B4AFB7256084ED8A4376E3F /* Build configuration list for PBXAggregateTarget "Experimental" */;
			buildPhases = (
				2AAA6F380B5FC4B2D1DB1032 /* Generate _deps/catch-build/CMakeFiles/Experimental */,
			);
			dependencies = (
			);
			name = Experimental;
			productName = Experimental;
		};
		89BABF4261F640DF8DA2CED0 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 8716297C5AF54E2093F3C581 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				003C8D08B0008F35F218E126 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		93B707143C794E2B802A0F8D /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 7095E1C5311F438AA954046C /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				05FE8F7C4FD198E33593F99D /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		B3530F9DBB5443F0BAB7F911 /* Nightly */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = AFA4E77678834ED4BE75C297 /* Build configuration list for PBXAggregateTarget "Nightly" */;
			buildPhases = (
				9834A9C8ACB92F60F997530D /* Generate _deps/catch-build/CMakeFiles/Nightly */,
			);
			dependencies = (
			);
			name = Nightly;
			productName = Nightly;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		08A7C0CF3AD8401BB84BBE01 /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */ = {isa = PBXBuildFile; fileRef = 941D534845A84702B6237F3C /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */; };
		0F1955BF42BF408C8422D0CF /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */ = {isa = PBXBuildFile; fileRef = D7889DB81C84406AAEAE6963 /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */; };
		14434BCAFBCD40EAA21E5983 /* /Users/philipwenkel/Github/flask/src/flask.cpp */ = {isa = PBXBuildFile; fileRef = C3C9327A729B49859B72AC86 /* /Users/philipwenkel/Github/flask/src/flask.cpp */; };
		1A006A27CA80468B885467ED /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = 2FC1AB6B3CFB4C498DA5E80C /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */; };
		2C2958E6B294417B88F3BD68 /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = 6AFAF57C82E44DC6940062BC /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */; };
		3A5035632CB840B9AEDA40B2 /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = 4AB5DAC699274337A084F09B /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */; };
		6536C197A3BB48509CCF7845 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */ = {isa = PBXBuildFile; fileRef = 64E3CB36887A4D5083ACD8D8 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */; };
		6840B967D26241578775B9B8 /* /Users/philipwenkel/Github/flask/tests/test.cpp */ = {isa = PBXBuildFile; fileRef = BA847AEEC5714BF5AA8BCFB5 /* /Users/philipwenkel/Github/flask/tests/test.cpp */; };
		777F45F4161443CF883677D9 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */ = {isa = PBXBuildFile; fileRef = 0DFC838227A846F69604CD63 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */; };
		7F0427151F47490E9A4B1D76 /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 1D8B6C529AF147B292B35C1E /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */; };
		8B66EFEA5B69468EA7753B88 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */ = {isa = PBXBuildFile; fileRef = F9160297061F46C6B7C0F182 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */; };
		A49CE7E920044BD58C31D6EA /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 4521C9B96A6F4525928DE7A1 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */; };
		BCEA9F975930400EA87D330C /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A7DD96319FAE4609A6D41E17 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */; };
		D0A08F5C1C9B4A0AB1CC93C4 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = DC502BA6AE7E4281A6706258 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */; };
		D735DD6E65FE497F90347439 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */ = {isa = PBXBuildFile; fileRef = AC2D6D0AA0534F95A39D9773 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */; };
		D7AFEACE05254FAEBA0900E6 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */ = {isa = PBXBuildFile; fileRef = CAB2F06E95D54DB294A95FA6 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */; };
		E4A12EA32C1C43809BB10E8E /* /Users/philipwenkel/Github/flask/src/main.cpp */ = {isa = PBXBuildFile; fileRef = 788E03CA72984D1EA6A52B62 /* /Users/philipwenkel/Github/flask/src/main.cpp */; };
		EAE26C7BB23044439F315219 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */ = {isa = PBXBuildFile; fileRef = 1AB75B16457D4F80A652E181 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */; };
		F5CCF30C03BF4781A04584F3 /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = EFEE98EAC619435F84DFFE7E /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		37C3E7D1062A41AEAE38F110 /* Kuk */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Kuk;
		};
		CB3E7D2416E24FA9A8D3ECDB /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		DFFA4B854D9C49C3A2B710F0 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		1B4F49ADBD02436AB2CC0287 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 274274536AA141EEAC6C2D89;
			remoteInfo = language;
		};
		3A0DEEDC33924D30A0E46037 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 274274536AA141EEAC6C2D89;
			remoteInfo = language;
		};
		63EF6681894449A79DE87044 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 37AA55D7C82447E48D803F35;
			remoteInfo = test_flask;
		};
		7CE7D12CAAEC4F52AA01BF66 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E3E5F19F14464EC5856D1140;
			remoteInfo = flask;
		};
		8CE000E76F2845588F56E020 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 274274536AA141EEAC6C2D89;
			remoteInfo = language;
		};
		B746BF50B613491B9D3FD92F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 274274536AA141EEAC6C2D89;
			remoteInfo = language;
		};
		EE96B7A192F04A9D8FA6A3F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93B707143C794E2B802A0F8D;
			remoteInfo = ZERO_CHECK;
		};
		F170533BDC5A4C2A9CE8590D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24C1E39ED1DD456DB999C90F;
			remoteInfo = ALL_BUILD;
		};
		F492B813CB8F4FB6A15870E2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 86DF5DA9CFC64BB481995D34 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 17595389266D49258FBBD033;
			remoteInfo = test_language;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		01F8EA65F0D74E3BAF595E11 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		0DFC838227A846F69604CD63 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = task.cpp; path = dependencies/language/src/task.cpp; sourceTree = SOURCE_ROOT; };
		175D3F755B86428087E5DD12 /* language */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = liblanguage.a; sourceTree = BUILT_PRODUCTS_DIR; };
		1AB75B16457D4F80A652E181 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test.cpp; path = dependencies/language/tests/test.cpp; sourceTree = SOURCE_ROOT; };
		1D8B6C529AF147B292B35C1E /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2FC1AB6B3CFB4C498DA5E80C /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = dependencies/language/tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		346BB59199DF426F816583A9 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4521C9B96A6F4525928DE7A1 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		4AB5DAC699274337A084F09B /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		6132EBD693C2453FAC5A09DC /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		64E3CB36887A4D5083ACD8D8 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = token.cpp; path = dependencies/language/src/token.cpp; sourceTree = SOURCE_ROOT; };
		6AFAF57C82E44DC6940062BC /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
		788E03CA72984D1EA6A52B62 /* /Users/philipwenkel/Github/flask/src/main.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = main.cpp; path = src/main.cpp; sourceTree = SOURCE_ROOT; };
		941D534845A84702B6237F3C /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lexer.cpp; path = dependencies/language/src/lexer.cpp; sourceTree = SOURCE_ROOT; };
		A0941F94EFB6402BBC09F404 /* test_language */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_language; sourceTree = BUILT_PRODUCTS_DIR; };
		A7DD96319FAE4609A6D41E17 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = dependencies/language/tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AC2D6D0AA0534F95A39D9773 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = language.cpp; path = dependencies/language/src/language.cpp; sourceTree = SOURCE_ROOT; };
		B6C98EB95F224E36A2B423BB /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		BA847AEEC5714BF5AA8BCFB5 /* /Users/philipwenkel/Github/flask/tests/test.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test.cpp; path = tests/test.cpp; sourceTree = SOURCE_ROOT; };
		BE978097B5944902A1FAA63B /* flask */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = flask; sourceTree = BUILT_PRODUCTS_DIR; };
		C3C9327A729B49859B72AC86 /* /Users/philipwenkel/Github/flask/src/flask.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flask.cpp; path = src/flask.cpp; sourceTree = SOURCE_ROOT; };
		C522889189664402B39EC687 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		CAB2F06E95D54DB294A95FA6 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flask.hpp; path = include/flask/flask.hpp; sourceTree = SOURCE_ROOT; };
		D7889DB81C84406AAEAE6963 /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = promise.cpp; path = dependencies/language/src/promise.cpp; sourceTree = SOURCE_ROOT; };
		DC502BA6AE7E4281A6706258 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = dependencies/language/tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
		EFEE98EAC619435F84DFFE7E /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = dependencies/language/src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F9160297061F46C6B7C0F182 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = uni.cpp; path = dependencies/language/src/uni.cpp; sourceTree = SOURCE_ROOT; };
		FAC7450C73BD47BF9FF35546 /* test_flask */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_flask; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		2F2C667875F846958BE832AA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CAA4D4DF11EC42F5ADAB954E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E5CBD3ABD94E4FD289966A33 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E8866C25FAF04C74A565FF2C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00B3215ADB224C10AADC45AB /* language */ = {
			isa = PBXGroup;
			children = (
				77BE9A9D812840A3B2513EE6 /* sources */,
				EFEE98EAC619435F84DFFE7E /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */,
			);
			name = language;
			sourceTree = "<group>";
		};
		092C5200173A43DCB2F0ABC1 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1616C4EFD9614431A0AD2C46 /* Experimental */ = {
			isa = PBXGroup;
			children = (
				092C5200173A43DCB2F0ABC1 /* CMake Rules */,
				01F8EA65F0D74E3BAF595E11 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Experimental;
			sourceTree = "<group>";
		};
		2AE6BE8B19784A47A7320311 /* flask */ = {
			isa = PBXGroup;
			children = (
				B952075E5AA244779CA7CCCC /* sources */,
				916F45A266244567A12D7A67 /* headers */,
				D82BAEA99E62495E83B2E081 /* _ */,
				4521C9B96A6F4525928DE7A1 /* /Users/philipwenkel/Github/flask/src/CMakeLists.txt */,
			);
			name = flask;
			sourceTree = "<group>";
		};
		3106F388494946C884988E35 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		38FEEA5E8D954611BD3D507B /* Header Files */ = {
			isa = PBXGroup;
			children = (
				4AB5DAC699274337A084F09B /* /Users/philipwenkel/Github/flask/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		4B3AEE6CC5494060A57721BC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1AB75B16457D4F80A652E181 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */,
				DC502BA6AE7E4281A6706258 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		60841225C9BF42C086BB4890 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		6AEBE5546A99454BBFB16085 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		7002550387D14BB08915706C /* dependencies */ = {
			isa = PBXGroup;
			children = (
				C57FC3C792F14F8EA241F95B /* language */,
			);
			name = dependencies;
			sourceTree = "<group>";
		};
		77BE9A9D812840A3B2513EE6 /* sources */ = {
			isa = PBXGroup;
			children = (
				AC2D6D0AA0534F95A39D9773 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */,
				941D534845A84702B6237F3C /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */,
				D7889DB81C84406AAEAE6963 /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */,
				0DFC838227A846F69604CD63 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */,
				64E3CB36887A4D5083ACD8D8 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */,
				F9160297061F46C6B7C0F182 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */,
			);
			name = sources;
			sourceTree = "<group>";
		};
		89B5CA3D8F3441B190DDF159 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		8D0A555DD9DF4D52A3691893 /* CTestDashboardTargets */ = {
			isa = PBXGroup;
			children = (
				FD9A9D822A164685B9195337 /* NightlyMemoryCheck */,
				F52178C6BC834886914B3D07 /* Nightly */,
				F5A8C5B6202F4E2692EFBC04 /* Continuous */,
				1616C4EFD9614431A0AD2C46 /* Experimental */,
			);
			name = CTestDashboardTargets;
			sourceTree = "<group>";
		};
		916F45A266244567A12D7A67 /* headers */ = {
			isa = PBXGroup;
			children = (
				CAB2F06E95D54DB294A95FA6 /* /Users/philipwenkel/Github/flask/include/flask/flask.hpp */,
			);
			name = headers;
			sourceTree = "<group>";
		};
		9C3073C558D845B6BDA92EBA /* Products */ = {
			isa = PBXGroup;
			children = (
				BE978097B5944902A1FAA63B /* flask */,
				175D3F755B86428087E5DD12 /* language */,
				FAC7450C73BD47BF9FF35546 /* test_flask */,
				A0941F94EFB6402BBC09F404 /* test_language */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		B952075E5AA244779CA7CCCC /* sources */ = {
			isa = PBXGroup;
			children = (
				C3C9327A729B49859B72AC86 /* /Users/philipwenkel/Github/flask/src/flask.cpp */,
				788E03CA72984D1EA6A52B62 /* /Users/philipwenkel/Github/flask/src/main.cpp */,
			);
			name = sources;
			sourceTree = "<group>";
		};
		BCFA79D52EAE43C99365C4EE /* Header Files */ = {
			isa = PBXGroup;
			children = (
				2FC1AB6B3CFB4C498DA5E80C /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		BEF8991616B749BBBE382BC1 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				89B5CA3D8F3441B190DDF159 /* CMake Rules */,
				346BB59199DF426F816583A9 /* /Users/philipwenkel/Github/flask/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		C57FC3C792F14F8EA241F95B /* language */ = {
			isa = PBXGroup;
			children = (
				00B3215ADB224C10AADC45AB /* language */,
				F34644A05ED64A21A3447184 /* test_language */,
			);
			name = language;
			sourceTree = "<group>";
		};
		D82BAEA99E62495E83B2E081 /* _ */ = {
			isa = PBXGroup;
			children = (
				F1ACB601BE924F4892B12319 /* test_flask */,
			);
			name = _;
			sourceTree = "<group>";
		};
		D95F4DC186CC4121885A3F99 = {
			isa = PBXGroup;
			children = (
				BEF8991616B749BBBE382BC1 /* ALL_BUILD */,
				7002550387D14BB08915706C /* dependencies */,
				8D0A555DD9DF4D52A3691893 /* CTestDashboardTargets */,
				2AE6BE8B19784A47A7320311 /* flask */,
				9C3073C558D845B6BDA92EBA /* Products */,
				6AEBE5546A99454BBFB16085 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		EA4397BA448240B680F71BA2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BA847AEEC5714BF5AA8BCFB5 /* /Users/philipwenkel/Github/flask/tests/test.cpp */,
				6AFAF57C82E44DC6940062BC /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F1ACB601BE924F4892B12319 /* test_flask */ = {
			isa = PBXGroup;
			children = (
				EA4397BA448240B680F71BA2 /* Source Files */,
				38FEEA5E8D954611BD3D507B /* Header Files */,
				1D8B6C529AF147B292B35C1E /* /Users/philipwenkel/Github/flask/tests/CMakeLists.txt */,
			);
			name = test_flask;
			sourceTree = "<group>";
		};
		F34644A05ED64A21A3447184 /* test_language */ = {
			isa = PBXGroup;
			children = (
				4B3AEE6CC5494060A57721BC /* Source Files */,
				BCFA79D52EAE43C99365C4EE /* Header Files */,
				A7DD96319FAE4609A6D41E17 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */,
			);
			name = test_language;
			sourceTree = "<group>";
		};
		F52178C6BC834886914B3D07 /* Nightly */ = {
			isa = PBXGroup;
			children = (
				3106F388494946C884988E35 /* CMake Rules */,
				B6C98EB95F224E36A2B423BB /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Nightly;
			sourceTree = "<group>";
		};
		F5A8C5B6202F4E2692EFBC04 /* Continuous */ = {
			isa = PBXGroup;
			children = (
				60841225C9BF42C086BB4890 /* CMake Rules */,
				6132EBD693C2453FAC5A09DC /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Continuous;
			sourceTree = "<group>";
		};
		FBE78285352B48B2831AB067 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		FD9A9D822A164685B9195337 /* NightlyMemoryCheck */ = {
			isa = PBXGroup;
			children = (
				FBE78285352B48B2831AB067 /* CMake Rules */,
				C522889189664402B39EC687 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = NightlyMemoryCheck;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		17595389266D49258FBBD033 /* test_language */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = EB7E2F7EB9C1410ABAA0B193 /* Build configuration list for PBXNativeTarget "test_language" */;
			buildPhases = (
				3E5AEDAD373A46C4BAD1EC0F /* Sources */,
				E5CBD3ABD94E4FD289966A33 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6FE1A761EBFF466ABF126E19 /* PBXTargetDependency */,
			);
			name = test_language;
			productName = test_language;
			productReference = A0941F94EFB6402BBC09F404 /* test_language */;
			productType = "com.apple.product-type.tool";
		};
		274274536AA141EEAC6C2D89 /* language */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CC9E06379AF1406B841CB5E9 /* Build configuration list for PBXNativeTarget "language" */;
			buildPhases = (
				E7D61AA15CA547C7A2587651 /* Sources */,
				2F2C667875F846958BE832AA /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = language;
			productName = language;
			productReference = 175D3F755B86428087E5DD12 /* language */;
			productType = "com.apple.product-type.library.static";
		};
		37AA55D7C82447E48D803F35 /* test_flask */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 072AF92491B1476589BA4730 /* Build configuration list for PBXNativeTarget "test_flask" */;
			buildPhases = (
				91CD177CF2074C1C82D8B4DC /* Sources */,
				E8866C25FAF04C74A565FF2C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B2678AEEE5204E19AFF1D39F /* PBXTargetDependency */,
			);
			name = test_flask;
			productName = test_flask;
			productReference = FAC7450C73BD47BF9FF35546 /* test_flask */;
			productType = "com.apple.product-type.tool";
		};
		E3E5F19F14464EC5856D1140 /* flask */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 05B9169D2EEA4E3B9F0157DB /* Build configuration list for PBXNativeTarget "flask" */;
			buildPhases = (
				62BFB487F7F64D3C8D26D4C7 /* Sources */,
				CAA4D4DF11EC42F5ADAB954E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				DA78CE24B4B5485FBFF029BF /* PBXTargetDependency */,
			);
			name = flask;
			productName = flask;
			productReference = BE978097B5944902A1FAA63B /* flask */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		86DF5DA9CFC64BB481995D34 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = 5FBE0B05C57E45FB8ADC5D63 /* Build configuration list for PBXProject "flask" */;
			buildSettings = {
			};
			buildStyles = (
				CB3E7D2416E24FA9A8D3ECDB /* Debug */,
				DFFA4B854D9C49C3A2B710F0 /* Release */,
				37C3E7D1062A41AEAE38F110 /* Kuk */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = D95F4DC186CC4121885A3F99;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				24C1E39ED1DD456DB999C90F /* ALL_BUILD */,
				25A4F9311DC347598D7CF4B3 /* Continuous */,
				4E34A062908746FDA1960930 /* Experimental */,
				B3530F9DBB5443F0BAB7F911 /* Nightly */,
				1DAD8EEA34F043B88480E3AB /* NightlyMemoryCheck */,
				89BABF4261F640DF8DA2CED0 /* RUN_TESTS */,
				93B707143C794E2B802A0F8D /* ZERO_CHECK */,
				E3E5F19F14464EC5856D1140 /* flask */,
				12D3F9CEE9234740A971E729 /* install */,
				274274536AA141EEAC6C2D89 /* language */,
				37AA55D7C82447E48D803F35 /* test_flask */,
				17595389266D49258FBBD033 /* test_language */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		003C8D08B0008F35F218E126 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
";
			showEnvVarsInLog = 0;
		};
		05FE8F7C4FD198E33593F99D /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/ZERO_CHECK			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		09FB783FD30DC6E66DF354AF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		23E0E19C1FE635DB84934AD9 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		2AAA6F380B5FC4B2D1DB1032 /* Generate _deps/catch-build/CMakeFiles/Experimental */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate _deps/catch-build/CMakeFiles/Experimental";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Experimental"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
";
			showEnvVarsInLog = 0;
		};
		323E6CE94951678BF055CC89 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		83432DB9F157F2B3825D919E /* Generate _deps/catch-build/CMakeFiles/Continuous */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate _deps/catch-build/CMakeFiles/Continuous";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Continuous"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
";
			showEnvVarsInLog = 0;
		};
		87AF4882E018677E2624B544 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		910A41151295C5F9742C25BD = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
";
			showEnvVarsInLog = 0;
		};
		9834A9C8ACB92F60F997530D /* Generate _deps/catch-build/CMakeFiles/Nightly */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate _deps/catch-build/CMakeFiles/Nightly";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Nightly"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A57B0D3CC6DADCDAFDFAFFB4 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/CMakeFiles/ALL_BUILD			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		A68D7F74133ED74D8658B427 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		E9BF10CCF20463D90CCEA37E /* Generate _deps/catch-build/CMakeFiles/NightlyMemoryCheck */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate _deps/catch-build/CMakeFiles/NightlyMemoryCheck";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/NightlyMemoryCheck"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		3E5AEDAD373A46C4BAD1EC0F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EAE26C7BB23044439F315219 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */,
				D0A08F5C1C9B4A0AB1CC93C4 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62BFB487F7F64D3C8D26D4C7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				14434BCAFBCD40EAA21E5983 /* /Users/philipwenkel/Github/flask/src/flask.cpp */,
				E4A12EA32C1C43809BB10E8E /* /Users/philipwenkel/Github/flask/src/main.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		91CD177CF2074C1C82D8B4DC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6840B967D26241578775B9B8 /* /Users/philipwenkel/Github/flask/tests/test.cpp */,
				2C2958E6B294417B88F3BD68 /* /Users/philipwenkel/Github/flask/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E7D61AA15CA547C7A2587651 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D735DD6E65FE497F90347439 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */,
				08A7C0CF3AD8401BB84BBE01 /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */,
				0F1955BF42BF408C8422D0CF /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */,
				777F45F4161443CF883677D9 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */,
				6536C197A3BB48509CCF7845 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */,
				8B66EFEA5B69468EA7753B88 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		6FE1A761EBFF466ABF126E19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 274274536AA141EEAC6C2D89 /* language */;
			targetProxy = B746BF50B613491B9D3FD92F /* PBXContainerItemProxy */;
		};
		8B84A9F4D9C54A3D98CD8B7A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 17595389266D49258FBBD033 /* test_language */;
			targetProxy = F492B813CB8F4FB6A15870E2 /* PBXContainerItemProxy */;
		};
		94409A960CE44D888D0D8582 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93B707143C794E2B802A0F8D /* ZERO_CHECK */;
			targetProxy = EE96B7A192F04A9D8FA6A3F3 /* PBXContainerItemProxy */;
		};
		99918BACACCF4679B36AF72F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 274274536AA141EEAC6C2D89 /* language */;
			targetProxy = 3A0DEEDC33924D30A0E46037 /* PBXContainerItemProxy */;
		};
		A5B8EBA325E149C6A604F14B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E3E5F19F14464EC5856D1140 /* flask */;
			targetProxy = 7CE7D12CAAEC4F52AA01BF66 /* PBXContainerItemProxy */;
		};
		B1715C62CB404036B587B374 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24C1E39ED1DD456DB999C90F /* ALL_BUILD */;
			targetProxy = F170533BDC5A4C2A9CE8590D /* PBXContainerItemProxy */;
		};
		B2678AEEE5204E19AFF1D39F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 274274536AA141EEAC6C2D89 /* language */;
			targetProxy = 8CE000E76F2845588F56E020 /* PBXContainerItemProxy */;
		};
		DA78CE24B4B5485FBFF029BF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 274274536AA141EEAC6C2D89 /* language */;
			targetProxy = 1B4F49ADBD02436AB2CC0287 /* PBXContainerItemProxy */;
		};
		F088F18D3C704E83A317BE48 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 37AA55D7C82447E48D803F35 /* test_flask */;
			targetProxy = 63EF6681894449A79DE87044 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		01AE0301AB5242DDBE249837 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Kuk;
		};
		02F6E7810A6B4DFEAE481D73 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests/CMakeFiles/test_language.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/tests/language,/Users/philipwenkel/Github/flask/dependencies/language/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Kuk/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		15088ECA7E5D492FB10820F6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		178680165C6749748F0EC544 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Release;
		};
		1A8EEB7E02304653B4C09180 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/CMakeFiles/language.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/dependencies/language/include/language,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		20BE437017114C15B0B4591B /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		20C083A67D154081B228B35A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts     -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Release/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		216835D3454E4C2DAC40D737 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		21D2EE9FD4F442F6BAA4381A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests/CMakeFiles/test_language.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/tests/language,/Users/philipwenkel/Github/flask/dependencies/language/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Release/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		24787E2A9966440896264002 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/build;
			};
			name = Debug;
		};
		2875EA92569240EA9B84DA60 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		2984EC51C1EE404CAA5FCD31 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		2B74631717634CE1A10EC5E5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/dependencies/language/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts    '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Debug/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		319025C2D720482A878E0C2D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		38352568233A4CB0B77E078D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/dependencies/language/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts     -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Release/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		41961A52AFF54E4592497298 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Kuk/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		4B9002FC18C347DE8E5EAE1E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		52282724D7974093B9478988 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		5F1418260A7C420B909F2789 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		6563F3F4E557419581BA9C17 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		67A2BB8F751F4016B656DCD7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		7206E553383C45C89B4A0810 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/CMakeFiles/language.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/dependencies/language/include/language,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		776CB122A17245569DF0BA5E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		869F0BF22F21448FBF33DFEB /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		98838FD2EAF34F77A657A37D /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/src/CMakeFiles/flask.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/src/ph::language",/Users/philipwenkel/Github/flask/dependencies/language/include,"$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Kuk/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		B3F12621D33042AF98E05EEB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		B4BB87B8B46F49E9AC0C9C74 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests/CMakeFiles/test_language.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/tests/language,/Users/philipwenkel/Github/flask/dependencies/language/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Debug/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		B50D7C23750A4A49B422C674 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/CMakeFiles/language.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/dependencies/language/include/language,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		B8B7ABC57CE04287A15635AE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		BBC76E67E6904EEFA4FD48BA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		BE7BEF77B32F4DAE8C40A34F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		C7093256EFB0468F872E77CB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		CC52EA1D7B5549D597E9CD2A /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		CF1CB0A4A4C249B59F44D8BF /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		D88BA3D34F374FF9B7117D46 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		DCE8E46CCCF848B0ADDC0EA6 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		F05971C0EC364C20ADBA1F07 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		F26A3444AA094C60814E8F31 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		F8337EE90C5F4233A6018526 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/tests/CMakeFiles/test_flask.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = " -fcoroutines-ts    '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Debug/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_flask;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		05B9169D2EEA4E3B9F0157DB /* Build configuration list for PBXNativeTarget "flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2B74631717634CE1A10EC5E5 /* Debug */,
				38352568233A4CB0B77E078D /* Release */,
				98838FD2EAF34F77A657A37D /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		072AF92491B1476589BA4730 /* Build configuration list for PBXNativeTarget "test_flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F8337EE90C5F4233A6018526 /* Debug */,
				20C083A67D154081B228B35A /* Release */,
				41961A52AFF54E4592497298 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2B4AFB7256084ED8A4376E3F /* Build configuration list for PBXAggregateTarget "Experimental" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D88BA3D34F374FF9B7117D46 /* Debug */,
				B8B7ABC57CE04287A15635AE /* Release */,
				F26A3444AA094C60814E8F31 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5FBE0B05C57E45FB8ADC5D63 /* Build configuration list for PBXProject "flask" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				24787E2A9966440896264002 /* Debug */,
				178680165C6749748F0EC544 /* Release */,
				01AE0301AB5242DDBE249837 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		634D03450645470CA997C57E /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4B9002FC18C347DE8E5EAE1E /* Debug */,
				B3F12621D33042AF98E05EEB /* Release */,
				20BE437017114C15B0B4591B /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7095E1C5311F438AA954046C /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BBC76E67E6904EEFA4FD48BA /* Debug */,
				2984EC51C1EE404CAA5FCD31 /* Release */,
				DCE8E46CCCF848B0ADDC0EA6 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8716297C5AF54E2093F3C581 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2875EA92569240EA9B84DA60 /* Debug */,
				6563F3F4E557419581BA9C17 /* Release */,
				CC52EA1D7B5549D597E9CD2A /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AFA4E77678834ED4BE75C297 /* Build configuration list for PBXAggregateTarget "Nightly" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5F1418260A7C420B909F2789 /* Debug */,
				15088ECA7E5D492FB10820F6 /* Release */,
				869F0BF22F21448FBF33DFEB /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AFAE3F976BE24C298542F214 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				319025C2D720482A878E0C2D /* Debug */,
				67A2BB8F751F4016B656DCD7 /* Release */,
				216835D3454E4C2DAC40D737 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CC9E06379AF1406B841CB5E9 /* Build configuration list for PBXNativeTarget "language" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7206E553383C45C89B4A0810 /* Debug */,
				B50D7C23750A4A49B422C674 /* Release */,
				1A8EEB7E02304653B4C09180 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DD0317008AF14FC3B31E1EC7 /* Build configuration list for PBXAggregateTarget "Continuous" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				52282724D7974093B9478988 /* Debug */,
				BE7BEF77B32F4DAE8C40A34F /* Release */,
				F05971C0EC364C20ADBA1F07 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EB7E2F7EB9C1410ABAA0B193 /* Build configuration list for PBXNativeTarget "test_language" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B4BB87B8B46F49E9AC0C9C74 /* Debug */,
				21D2EE9FD4F442F6BAA4381A /* Release */,
				02F6E7810A6B4DFEAE481D73 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F65EB51073FD4887B7BBD4F6 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				776CB122A17245569DF0BA5E /* Debug */,
				C7093256EFB0468F872E77CB /* Release */,
				CF1CB0A4A4C249B59F44D8BF /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 86DF5DA9CFC64BB481995D34 /* Project object */;
}
