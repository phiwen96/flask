// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		12D3F9CEE9234740A971E729 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = BC95BD65D3C24A8F9D4D5BF5 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				85C59AFDDB76404592CA4C5F /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		1DAD8EEA34F043B88480E3AB /* NightlyMemoryCheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = B3C8E51821F540C3A7ED60F2 /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */;
			buildPhases = (
				E9BF10CCF20463D90CCEA37E /* Generate ../../_deps/catch-build/CMakeFiles/NightlyMemoryCheck */,
			);
			dependencies = (
			);
			name = NightlyMemoryCheck;
			productName = NightlyMemoryCheck;
		};
		24C1E39ED1DD456DB999C90F /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = ADC3026CD40144E0A36B440A /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				3888B4C91A6E69D7CACA7163 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				FEDDE4547D954AF6AE2197AB /* PBXTargetDependency */,
				C4D1308E0DD5430899FE22B2 /* PBXTargetDependency */,
				ABA3782F3F014E8CA2A6C409 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		25A4F9311DC347598D7CF4B3 /* Continuous */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 0DC9AD0A0B5B47998FF021EE /* Build configuration list for PBXAggregateTarget "Continuous" */;
			buildPhases = (
				83432DB9F157F2B3825D919E /* Generate ../../_deps/catch-build/CMakeFiles/Continuous */,
			);
			dependencies = (
			);
			name = Continuous;
			productName = Continuous;
		};
		4E34A062908746FDA1960930 /* Experimental */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 65CF62DEBD064DB6B959E197 /* Build configuration list for PBXAggregateTarget "Experimental" */;
			buildPhases = (
				2AAA6F380B5FC4B2D1DB1032 /* Generate ../../_deps/catch-build/CMakeFiles/Experimental */,
			);
			dependencies = (
			);
			name = Experimental;
			productName = Experimental;
		};
		89BABF4261F640DF8DA2CED0 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 0DCE8685D3434821B9E163B0 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				003C8D08B0008F35F218E126 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		93B707143C794E2B802A0F8D /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 6B3175DB5B6C44688CFA70BE /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				3BDD723276F3BAC5020C4A1E /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		B3530F9DBB5443F0BAB7F911 /* Nightly */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = EA9BDE6B18144B4E973D9E09 /* Build configuration list for PBXAggregateTarget "Nightly" */;
			buildPhases = (
				9834A9C8ACB92F60F997530D /* Generate ../../_deps/catch-build/CMakeFiles/Nightly */,
			);
			dependencies = (
			);
			name = Nightly;
			productName = Nightly;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		04B5D024C85E4ACE98D0FF53 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */ = {isa = PBXBuildFile; fileRef = ADB50CAC55BF4029A077DB7A /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */; };
		0BE991F8F1114E9FA9049E64 /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 4DC3D9599C5041DBBAC445EE /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */; };
		1400A2F0F98741A995DAFD3C /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */ = {isa = PBXBuildFile; fileRef = 54279DC8C29F49919BC05659 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */; };
		41A6235BBCEB48F99A6F4375 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */ = {isa = PBXBuildFile; fileRef = E45E95475B1346E597D60A9D /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */; };
		517245A757544B6C8150B62F /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */ = {isa = PBXBuildFile; fileRef = 75367F005CED44D7AC363C03 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */; };
		5F0AA5E40EFB4A0C9CC78FA1 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */ = {isa = PBXBuildFile; fileRef = 33050FA758EC43638A2071EB /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */; };
		637DB86244904632AF7CC4D6 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */ = {isa = PBXBuildFile; fileRef = ABDB02D0FA1E44A989F2115A /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */; };
		8742807D416A4B9489AC330C /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */ = {isa = PBXBuildFile; fileRef = 18C1DD7A3A1B461A86B84CF5 /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */; };
		ABD994EF9A4A488BA8DEC4FF /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 0B7DD02FB4F741A58C5CED93 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */; };
		C12B1AACAE1A49B789BB9B79 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */ = {isa = PBXBuildFile; fileRef = 2AC4B1D6F12B4D51B10926C7 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */; };
		FC2FF631621F40B69BA6668F /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */ = {isa = PBXBuildFile; fileRef = A2C4A359182D4778AE967D9E /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		01D2C8A5320349228246E449 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
		2DBB0634788940A2B7A6D4F1 /* Kuk */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Kuk;
		};
		69BFD1233C8C41BAA9B14294 /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		14A8CE56A3804456AF052FB7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93B707143C794E2B802A0F8D;
			remoteInfo = ZERO_CHECK;
		};
		5781CEC453084B2FB5D0678F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93B707143C794E2B802A0F8D;
			remoteInfo = ZERO_CHECK;
		};
		6952A383F1B842B4BE46D6EB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 93B707143C794E2B802A0F8D;
			remoteInfo = ZERO_CHECK;
		};
		6D1AA288797B45C680DC1DB4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 17595389266D49258FBBD033;
			remoteInfo = test_language;
		};
		B2E07D8146A345468AE04923 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 274274536AA141EEAC6C2D89;
			remoteInfo = language;
		};
		B86C02933F9E46B0B55F0539 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 274274536AA141EEAC6C2D89;
			remoteInfo = language;
		};
		BD22BBCB7F754B7D941B7258 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B59525949E8B45F188DDFB8E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 24C1E39ED1DD456DB999C90F;
			remoteInfo = ALL_BUILD;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		07A186B08E794E0D8F8A998B /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "../../xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		0B7DD02FB4F741A58C5CED93 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		18C1DD7A3A1B461A86B84CF5 /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = promise.cpp; path = src/promise.cpp; sourceTree = SOURCE_ROOT; };
		2AC4B1D6F12B4D51B10926C7 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = uni.cpp; path = src/uni.cpp; sourceTree = SOURCE_ROOT; };
		33050FA758EC43638A2071EB /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = task.cpp; path = src/task.cpp; sourceTree = SOURCE_ROOT; };
		33A3542F38234FA1AD11D13B /* test_language */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_language; sourceTree = BUILT_PRODUCTS_DIR; };
		3B139DB66B044DEF91F9B11D /* /Users/philipwenkel/Github/flask/dependencies/language/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3B4E6BA8FD0346B4B96DB023 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "../../xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		4DC3D9599C5041DBBAC445EE /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = src/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		54279DC8C29F49919BC05659 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = test.cpp; path = tests/test.cpp; sourceTree = SOURCE_ROOT; };
		75367F005CED44D7AC363C03 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = test.hpp; path = tests/include/test.hpp; sourceTree = SOURCE_ROOT; };
		8891410FBF694E1FA9E4B0DE /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "../../xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		A2C4A359182D4778AE967D9E /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lexer.cpp; path = src/lexer.cpp; sourceTree = SOURCE_ROOT; };
		A5C96CB08ADC498F8A7FFB27 /* language */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = liblanguage.a; sourceTree = BUILT_PRODUCTS_DIR; };
		ABDB02D0FA1E44A989F2115A /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = token.cpp; path = src/token.cpp; sourceTree = SOURCE_ROOT; };
		ADB50CAC55BF4029A077DB7A /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = language.cpp; path = src/language.cpp; sourceTree = SOURCE_ROOT; };
		D64558E7091B469E82C0763D /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "../../xbuild/_deps/catch-src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		E45E95475B1346E597D60A9D /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = testlib.cpp; path = tests/testlib.cpp; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		05E0744B08F54A2D86418A8E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FC87305D491B449B81A9950B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		0F9E3AA9206C4425B6111A77 /* language */ = {
			isa = PBXGroup;
			children = (
				7074C4F2239A43D29491AE18 /* language */,
				7CD319C4499B4171A38295D1 /* test_language */,
			);
			name = language;
			sourceTree = "<group>";
		};
		174AFAAB4D724A9FA845501C /* sources */ = {
			isa = PBXGroup;
			children = (
				ADB50CAC55BF4029A077DB7A /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */,
				A2C4A359182D4778AE967D9E /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */,
				18C1DD7A3A1B461A86B84CF5 /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */,
				33050FA758EC43638A2071EB /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */,
				ABDB02D0FA1E44A989F2115A /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */,
				2AC4B1D6F12B4D51B10926C7 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */,
			);
			name = sources;
			sourceTree = "<group>";
		};
		1F88968E6AF54E7D9D75C3F0 /* dependencies */ = {
			isa = PBXGroup;
			children = (
				0F9E3AA9206C4425B6111A77 /* language */,
			);
			name = dependencies;
			sourceTree = "<group>";
		};
		244DA6E7DBC74DAD85558185 /* CTestDashboardTargets */ = {
			isa = PBXGroup;
			children = (
				4466EFD98F114E888BEBAD88 /* NightlyMemoryCheck */,
				D836284324DB4B25B890052A /* Nightly */,
				F01E7D981B7A452F899CACF2 /* Continuous */,
				CA46A107E0DC44B8A76A4B83 /* Experimental */,
			);
			name = CTestDashboardTargets;
			sourceTree = "<group>";
		};
		3568F3D9A39246F9BFB2CEE3 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		4466EFD98F114E888BEBAD88 /* NightlyMemoryCheck */ = {
			isa = PBXGroup;
			children = (
				A97E534CC6BF4F20AA2EB88C /* CMake Rules */,
				8891410FBF694E1FA9E4B0DE /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = NightlyMemoryCheck;
			sourceTree = "<group>";
		};
		4E4B577E145F4267BD08B7AA /* Header Files */ = {
			isa = PBXGroup;
			children = (
				75367F005CED44D7AC363C03 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/include/test.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		51CD8F152F3740FCB7F77CD8 /* Products */ = {
			isa = PBXGroup;
			children = (
				A5C96CB08ADC498F8A7FFB27 /* language */,
				33A3542F38234FA1AD11D13B /* test_language */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		5D1151DBC6524A52AE38ED00 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				54279DC8C29F49919BC05659 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */,
				E45E95475B1346E597D60A9D /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7074C4F2239A43D29491AE18 /* language */ = {
			isa = PBXGroup;
			children = (
				174AFAAB4D724A9FA845501C /* sources */,
				4DC3D9599C5041DBBAC445EE /* /Users/philipwenkel/Github/flask/dependencies/language/src/CMakeLists.txt */,
			);
			name = language;
			sourceTree = "<group>";
		};
		71E91DF532DB45379B49A433 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		7CD319C4499B4171A38295D1 /* test_language */ = {
			isa = PBXGroup;
			children = (
				5D1151DBC6524A52AE38ED00 /* Source Files */,
				4E4B577E145F4267BD08B7AA /* Header Files */,
				0B7DD02FB4F741A58C5CED93 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/CMakeLists.txt */,
			);
			name = test_language;
			sourceTree = "<group>";
		};
		A97E534CC6BF4F20AA2EB88C /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		CA46A107E0DC44B8A76A4B83 /* Experimental */ = {
			isa = PBXGroup;
			children = (
				3568F3D9A39246F9BFB2CEE3 /* CMake Rules */,
				07A186B08E794E0D8F8A998B /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Experimental;
			sourceTree = "<group>";
		};
		CAB4345192D3477B845A3E17 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		CCC4561729864805B547D757 = {
			isa = PBXGroup;
			children = (
				E96D680A86834D7C85B728C4 /* ALL_BUILD */,
				1F88968E6AF54E7D9D75C3F0 /* dependencies */,
				244DA6E7DBC74DAD85558185 /* CTestDashboardTargets */,
				51CD8F152F3740FCB7F77CD8 /* Products */,
				CEEBD8472757462880C52D25 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		CEEBD8472757462880C52D25 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		CF627154C0F341A0B9EF009C /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		D836284324DB4B25B890052A /* Nightly */ = {
			isa = PBXGroup;
			children = (
				CF627154C0F341A0B9EF009C /* CMake Rules */,
				3B4E6BA8FD0346B4B96DB023 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Nightly;
			sourceTree = "<group>";
		};
		E96D680A86834D7C85B728C4 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				CAB4345192D3477B845A3E17 /* CMake Rules */,
				3B139DB66B044DEF91F9B11D /* /Users/philipwenkel/Github/flask/dependencies/language/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		F01E7D981B7A452F899CACF2 /* Continuous */ = {
			isa = PBXGroup;
			children = (
				71E91DF532DB45379B49A433 /* CMake Rules */,
				D64558E7091B469E82C0763D /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/CMakeLists.txt */,
			);
			name = Continuous;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		17595389266D49258FBBD033 /* test_language */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 360A483A0DF64C2698E1A704 /* Build configuration list for PBXNativeTarget "test_language" */;
			buildPhases = (
				FD196E9544F84F2B8AA6BF1B /* Sources */,
				FC87305D491B449B81A9950B /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3CC2BE2E17BC4412853830F1 /* PBXTargetDependency */,
				DEDA3E038DF24E1E961606B3 /* PBXTargetDependency */,
			);
			name = test_language;
			productName = test_language;
			productReference = 33A3542F38234FA1AD11D13B /* test_language */;
			productType = "com.apple.product-type.tool";
		};
		274274536AA141EEAC6C2D89 /* language */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 350BB333C0F34DE4BBFF0BE1 /* Build configuration list for PBXNativeTarget "language" */;
			buildPhases = (
				B50418A9109F469DB48ECBFA /* Sources */,
				05E0744B08F54A2D86418A8E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				82F34335CD884A2884E5DCDF /* PBXTargetDependency */,
			);
			name = language;
			productName = language;
			productReference = A5C96CB08ADC498F8A7FFB27 /* language */;
			productType = "com.apple.product-type.library.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		B59525949E8B45F188DDFB8E /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = A3546761563347E2BD1FABDC /* Build configuration list for PBXProject "language" */;
			buildSettings = {
			};
			buildStyles = (
				69BFD1233C8C41BAA9B14294 /* Debug */,
				01D2C8A5320349228246E449 /* Release */,
				2DBB0634788940A2B7A6D4F1 /* Kuk */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = CCC4561729864805B547D757;
			projectDirPath = ../../../dependencies/language;
			projectRoot = "";
			targets = (
				24C1E39ED1DD456DB999C90F /* ALL_BUILD */,
				25A4F9311DC347598D7CF4B3 /* Continuous */,
				4E34A062908746FDA1960930 /* Experimental */,
				B3530F9DBB5443F0BAB7F911 /* Nightly */,
				1DAD8EEA34F043B88480E3AB /* NightlyMemoryCheck */,
				89BABF4261F640DF8DA2CED0 /* RUN_TESTS */,
				93B707143C794E2B802A0F8D /* ZERO_CHECK */,
				12D3F9CEE9234740A971E729 /* install */,
				274274536AA141EEAC6C2D89 /* language */,
				17595389266D49258FBBD033 /* test_language */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		003C8D08B0008F35F218E126 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME
fi
";
			showEnvVarsInLog = 0;
		};
		09FB783FD30DC6E66DF354AF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		23E0E19C1FE635DB84934AD9 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		2AAA6F380B5FC4B2D1DB1032 /* Generate ../../_deps/catch-build/CMakeFiles/Experimental */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate ../../_deps/catch-build/CMakeFiles/Experimental";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Experimental"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Experimental
fi
";
			showEnvVarsInLog = 0;
		};
		323E6CE94951678BF055CC89 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3888B4C91A6E69D7CACA7163 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/dependencies/language/CMakeFiles/ALL_BUILD			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		3BDD723276F3BAC5020C4A1E /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
/Users/philipwenkel/Github/flask/xbuild/dependencies/language/CMakeFiles/ZERO_CHECK			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  make -f /Users/philipwenkel/Github/flask/xbuild/dependencies/language/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  make -f /Users/philipwenkel/Github/flask/xbuild/dependencies/language/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  make -f /Users/philipwenkel/Github/flask/xbuild/dependencies/language/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		83432DB9F157F2B3825D919E /* Generate ../../_deps/catch-build/CMakeFiles/Continuous */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate ../../_deps/catch-build/CMakeFiles/Continuous";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Continuous"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Continuous
fi
";
			showEnvVarsInLog = 0;
		};
		87AF4882E018677E2624B544 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		910A41151295C5F9742C25BD = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/dependencies/language
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake
fi
";
			showEnvVarsInLog = 0;
		};
		9834A9C8ACB92F60F997530D /* Generate ../../_deps/catch-build/CMakeFiles/Nightly */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate ../../_deps/catch-build/CMakeFiles/Nightly";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/Nightly"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D Nightly
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A68D7F74133ED74D8658B427 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		E9BF10CCF20463D90CCEA37E /* Generate ../../_deps/catch-build/CMakeFiles/NightlyMemoryCheck */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate ../../_deps/catch-build/CMakeFiles/NightlyMemoryCheck";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build/CMakeFiles/NightlyMemoryCheck"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
if test \"$CONFIGURATION\" = \"Kuk\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/ctest -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME -D NightlyMemoryCheck
fi
";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		B50418A9109F469DB48ECBFA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				04B5D024C85E4ACE98D0FF53 /* /Users/philipwenkel/Github/flask/dependencies/language/src/language.cpp */,
				FC2FF631621F40B69BA6668F /* /Users/philipwenkel/Github/flask/dependencies/language/src/lexer.cpp */,
				8742807D416A4B9489AC330C /* /Users/philipwenkel/Github/flask/dependencies/language/src/promise.cpp */,
				5F0AA5E40EFB4A0C9CC78FA1 /* /Users/philipwenkel/Github/flask/dependencies/language/src/task.cpp */,
				637DB86244904632AF7CC4D6 /* /Users/philipwenkel/Github/flask/dependencies/language/src/token.cpp */,
				C12B1AACAE1A49B789BB9B79 /* /Users/philipwenkel/Github/flask/dependencies/language/src/uni.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FD196E9544F84F2B8AA6BF1B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1400A2F0F98741A995DAFD3C /* /Users/philipwenkel/Github/flask/dependencies/language/tests/test.cpp */,
				41A6235BBCEB48F99A6F4375 /* /Users/philipwenkel/Github/flask/dependencies/language/tests/testlib.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		3CC2BE2E17BC4412853830F1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 274274536AA141EEAC6C2D89 /* language */;
			targetProxy = B2E07D8146A345468AE04923 /* PBXContainerItemProxy */;
		};
		82F34335CD884A2884E5DCDF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93B707143C794E2B802A0F8D /* ZERO_CHECK */;
			targetProxy = 6952A383F1B842B4BE46D6EB /* PBXContainerItemProxy */;
		};
		85C59AFDDB76404592CA4C5F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 24C1E39ED1DD456DB999C90F /* ALL_BUILD */;
			targetProxy = BD22BBCB7F754B7D941B7258 /* PBXContainerItemProxy */;
		};
		ABA3782F3F014E8CA2A6C409 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93B707143C794E2B802A0F8D /* ZERO_CHECK */;
			targetProxy = 14A8CE56A3804456AF052FB7 /* PBXContainerItemProxy */;
		};
		C4D1308E0DD5430899FE22B2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 17595389266D49258FBBD033 /* test_language */;
			targetProxy = 6D1AA288797B45C680DC1DB4 /* PBXContainerItemProxy */;
		};
		DEDA3E038DF24E1E961606B3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 93B707143C794E2B802A0F8D /* ZERO_CHECK */;
			targetProxy = 5781CEC453084B2FB5D0678F /* PBXContainerItemProxy */;
		};
		FEDDE4547D954AF6AE2197AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 274274536AA141EEAC6C2D89 /* language */;
			targetProxy = B86C02933F9E46B0B55F0539 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00C7B896A2CA4AC08DBE77D2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		01896D00ED0F4ADD988751AE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/CMakeFiles/language.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/dependencies/language/include/language,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		030B7EFF825C4026B887B03C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/CMakeFiles/language.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/dependencies/language/include/language,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		0E72741576664B369A0F9D5A /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		0E9D6F72AFD14C7EBEAE28C7 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		1A260CA77BE34405AC89162A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests/CMakeFiles/test_language.dir/Release/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/tests/language,/Users/philipwenkel/Github/flask/dependencies/language/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "    -DNDEBUG '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Release/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		1AB7E8A6F72E4ECC9A19A107 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/build;
			};
			name = Release;
		};
		1ADF7F25FB8C446FB19D2288 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		3D5A581E84574ACF9979183D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		5D76103D2E8B4C939E96CB9B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		607A204933BD4C39B13E4421 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		68530FC2765A467DA7A4D5F0 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		6BD94457AEDB4656BDECBF2C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		78622F3DDA9346628A00163E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		7CF4B8499D3F4B8FB15D665F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Nightly;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		7E792AD253994EDA94081182 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests/CMakeFiles/test_language.dir/Debug/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/tests/language,/Users/philipwenkel/Github/flask/dependencies/language/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "   '-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Debug/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		804AB058CB1D41E7BD3BA310 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		80FF3C68942A402A91FC0418 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		86B704E778534462AB529313 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		8E8EF6B119B94D7992B8EEF9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		969971C9398749E68D74D28A /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		9999A29C89734B83B3ABC04A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		A820AD72D9764757B8CC1FA5 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/CMakeFiles/language.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,/Users/philipwenkel/Github/flask/dependencies/language/include/language,"$(inherited)");
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LIBTOOLFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/src;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		A9E07058CB2F4E8882C002E5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Continuous;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		ABAD73608CCA40BCAE72F71F /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		AEDE5892BF6A4368B453CC80 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		B0D6D4EFD40A41F99AD46B65 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests/CMakeFiles/test_language.dir/Kuk/cmake_pch.hxx;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/philipwenkel/Github/flask/dependencies/language/tests/language,/Users/philipwenkel/Github/flask/dependencies/language/tests/include,/Users/philipwenkel/Github/flask/dependencies/language/include,/opt/homebrew/include,"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-src/single_include","$(inherited)");
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CPLUSPLUSFLAGS = "'-std=gnu++2a' ";
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/Users/philipwenkel/Github/flask/xbuild/dependencies/language/src/Kuk/liblanguage.a);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_language;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/tests;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
		B52B02A4C1404971A35A3865 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = NightlyMemoryCheck;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		C20F837678C5428E8BB7C553 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/build;
			};
			name = Debug;
		};
		C84F313B9DE04935BAF888A1 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language/build;
			};
			name = Kuk;
		};
		D404C06C37DB4BF0BBCB9315 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		D875990785A94523955A6AD3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Experimental;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-build";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		F99B4B8F68874251B84DEBB1 /* Kuk */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/philipwenkel/Github/flask/xbuild/dependencies/language;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Kuk;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		0DC9AD0A0B5B47998FF021EE /* Build configuration list for PBXAggregateTarget "Continuous" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				80FF3C68942A402A91FC0418 /* Debug */,
				A9E07058CB2F4E8882C002E5 /* Release */,
				86B704E778534462AB529313 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0DCE8685D3434821B9E163B0 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				78622F3DDA9346628A00163E /* Debug */,
				AEDE5892BF6A4368B453CC80 /* Release */,
				607A204933BD4C39B13E4421 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		350BB333C0F34DE4BBFF0BE1 /* Build configuration list for PBXNativeTarget "language" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				030B7EFF825C4026B887B03C /* Debug */,
				01896D00ED0F4ADD988751AE /* Release */,
				A820AD72D9764757B8CC1FA5 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		360A483A0DF64C2698E1A704 /* Build configuration list for PBXNativeTarget "test_language" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7E792AD253994EDA94081182 /* Debug */,
				1A260CA77BE34405AC89162A /* Release */,
				B0D6D4EFD40A41F99AD46B65 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		65CF62DEBD064DB6B959E197 /* Build configuration list for PBXAggregateTarget "Experimental" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6BD94457AEDB4656BDECBF2C /* Debug */,
				D875990785A94523955A6AD3 /* Release */,
				969971C9398749E68D74D28A /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6B3175DB5B6C44688CFA70BE /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1ADF7F25FB8C446FB19D2288 /* Debug */,
				9999A29C89734B83B3ABC04A /* Release */,
				ABAD73608CCA40BCAE72F71F /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A3546761563347E2BD1FABDC /* Build configuration list for PBXProject "language" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C20F837678C5428E8BB7C553 /* Debug */,
				1AB7E8A6F72E4ECC9A19A107 /* Release */,
				C84F313B9DE04935BAF888A1 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		ADC3026CD40144E0A36B440A /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5D76103D2E8B4C939E96CB9B /* Debug */,
				8E8EF6B119B94D7992B8EEF9 /* Release */,
				0E9D6F72AFD14C7EBEAE28C7 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B3C8E51821F540C3A7ED60F2 /* Build configuration list for PBXAggregateTarget "NightlyMemoryCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B52B02A4C1404971A35A3865 /* Debug */,
				804AB058CB1D41E7BD3BA310 /* Release */,
				0E72741576664B369A0F9D5A /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BC95BD65D3C24A8F9D4D5BF5 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D404C06C37DB4BF0BBCB9315 /* Debug */,
				00C7B896A2CA4AC08DBE77D2 /* Release */,
				F99B4B8F68874251B84DEBB1 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EA9BDE6B18144B4E973D9E09 /* Build configuration list for PBXAggregateTarget "Nightly" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7CF4B8499D3F4B8FB15D665F /* Debug */,
				3D5A581E84574ACF9979183D /* Release */,
				68530FC2765A467DA7A4D5F0 /* Kuk */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = B59525949E8B45F188DDFB8E /* Project object */;
}
