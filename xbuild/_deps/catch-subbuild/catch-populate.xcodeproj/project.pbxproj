// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		1AB5FEAF1051427E87352DC8 /* catch-populate */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 7FAFDCBB40644E53A2B2B94A /* Build configuration list for PBXAggregateTarget "catch-populate" */;
			buildPhases = (
				3DA04542A9296F855E81AA42 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-mkdir */,
				FD9B54E76E77FB3D17BC0595 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-download */,
				64EDCEF80E13063690BE67A4 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-update */,
				B97F4F16F093BC9497BDC381 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-patch */,
				D1E97ECCEC616FBBC58094B9 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-configure */,
				3A99435F97BB5F33074ABAFB /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-build */,
				86EF6278F96790D6CFAD71EB /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-install */,
				A88E869FF28AF884D7811429 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-test */,
				1CC81881E0F3C211BA93631F /* Generate CMakeFiles/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-complete */,
				EA5C4FD56CFA772ADE28D28C /* Generate CMakeFiles/catch-populate */,
			);
			dependencies = (
				641751DC51474184AC90EFEB /* PBXTargetDependency */,
			);
			name = "catch-populate";
			productName = "catch-populate";
		};
		8FEE494D7DCB45F7AD3365A0 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = CFA213600DBA4E16A048CE8D /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				899A55A72266F6D9FCA785F1 /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		99CB906AD5D0446BAB47D866 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 94BFE90A0D6F4110903AF865 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				E519B13758729723D51C6D22 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				474BD47517CF48E7B2F85FA4 /* PBXTargetDependency */,
				A172FC62DB7D411F8FDD5C8D /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildStyle section */
		229B73EB238E479493482BC1 /* RelWithDebInfo */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = RelWithDebInfo;
		};
		D6036C36C9354E6DB99725B0 /* MinSizeRel */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = MinSizeRel;
		};
		E478543F2E9D4DEB9E2CD02D /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		FAAB27D5BED24DF78A132135 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		0C20DC57D07E4F67A42E1E4C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 08E0550153744D29A1E6451B /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1AB5FEAF1051427E87352DC8;
			remoteInfo = "catch-populate";
		};
		77817EDCFE8240B28AB11D0D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 08E0550153744D29A1E6451B /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEE494D7DCB45F7AD3365A0;
			remoteInfo = ZERO_CHECK;
		};
		BE870549F9D9406B934B3F6B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 08E0550153744D29A1E6451B /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEE494D7DCB45F7AD3365A0;
			remoteInfo = ZERO_CHECK;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		51C5E86611D54C258C93D8A2 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EF4826D2138048EEA98640F1 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		228B4DB2E7AB45288E977B48 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		50396B6CF3EB492688623429 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				228B4DB2E7AB45288E977B48 /* CMake Rules */,
				EF4826D2138048EEA98640F1 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		CE727F4991B344F6ABD7B68F /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		D8C737EFD5524291A3851178 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		E68AFF2AE68847BA849EFC48 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		F15F235D452848758D60DBBF = {
			isa = PBXGroup;
			children = (
				F280643559864CB2A423FACF /* catch-populate */,
				50396B6CF3EB492688623429 /* ALL_BUILD */,
				CE727F4991B344F6ABD7B68F /* Products */,
				D8C737EFD5524291A3851178 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		F280643559864CB2A423FACF /* catch-populate */ = {
			isa = PBXGroup;
			children = (
				E68AFF2AE68847BA849EFC48 /* CMake Rules */,
				51C5E86611D54C258C93D8A2 /* /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeLists.txt */,
			);
			name = "catch-populate";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		08E0550153744D29A1E6451B /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = BC39290AFE1C46499D8C851A /* Build configuration list for PBXProject "catch-populate" */;
			buildSettings = {
			};
			buildStyles = (
				E478543F2E9D4DEB9E2CD02D /* Debug */,
				FAAB27D5BED24DF78A132135 /* Release */,
				D6036C36C9354E6DB99725B0 /* MinSizeRel */,
				229B73EB238E479493482BC1 /* RelWithDebInfo */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = F15F235D452848758D60DBBF;
			projectDirPath = .;
			projectRoot = "";
			targets = (
				99CB906AD5D0446BAB47D866 /* ALL_BUILD */,
				8FEE494D7DCB45F7AD3365A0 /* ZERO_CHECK */,
				1AB5FEAF1051427E87352DC8 /* catch-populate */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		1CC81881E0F3C211BA93631F /* Generate CMakeFiles/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-complete */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-build","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-configure","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-download","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-install","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-mkdir","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-patch","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-test","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-update"			);
			name = "Generate CMakeFiles/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-complete";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-complete"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-complete
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-done
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-complete
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-done
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-complete
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-done
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-complete
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-done
fi
";
			showEnvVarsInLog = 0;
		};
		3A99435F97BB5F33074ABAFB /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-build */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-configure"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-build";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-build"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-build
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-build
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-build
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-build
fi
";
			showEnvVarsInLog = 0;
		};
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3DA04542A9296F855E81AA42 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-mkdir */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-mkdir";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-mkdir"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-mkdir
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-mkdir
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-mkdir
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E make_directory /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-mkdir
fi
";
			showEnvVarsInLog = 0;
		};
		64EDCEF80E13063690BE67A4 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-update */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-download"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-update";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-update"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitupdate.cmake
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitupdate.cmake
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitupdate.cmake
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-src
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitupdate.cmake
fi
";
			showEnvVarsInLog = 0;
		};
		86EF6278F96790D6CFAD71EB /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-install */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-build"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-install";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-install"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-install
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-install
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-install
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-install
fi
";
			showEnvVarsInLog = 0;
		};
		899A55A72266F6D9FCA785F1 /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/ZERO_CHECK"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  make -f /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		A88E869FF28AF884D7811429 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-test */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-install"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-test";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-test"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-test
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-test
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-test
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-test
fi
";
			showEnvVarsInLog = 0;
		};
		B97F4F16F093BC9497BDC381 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-patch */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-update"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-patch";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-patch"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-patch
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-patch
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-patch
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-patch
fi
";
			showEnvVarsInLog = 0;
		};
		D1E97ECCEC616FBBC58094B9 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-configure */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-patch","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-cfgcmd.txt"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-configure";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-configure"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-configure
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-configure
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-configure
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-build
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E echo_append
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-configure
fi
";
			showEnvVarsInLog = 0;
		};
		D9DAC7799B2CEEBEF4B6B9EF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		E519B13758729723D51C6D22 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/ALL_BUILD"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		EA5C4FD56CFA772ADE28D28C /* Generate CMakeFiles/catch-populate */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-complete"			);
			name = "Generate CMakeFiles/catch-populate";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/CMakeFiles/catch-populate"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild
fi
";
			showEnvVarsInLog = 0;
		};
		FD9B54E76E77FB3D17BC0595 /* Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-download */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-mkdir","/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/catch-populate-gitinfo.txt"			);
			name = "Generate catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-download";
			outputPaths = (
"/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/catch-populate-download"			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitclone.cmake
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-download
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitclone.cmake
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-download
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitclone.cmake
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-download
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/philipwenkel/Github/flask/xbuild/_deps
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -P /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/tmp/catch-populate-gitclone.cmake
  /opt/homebrew/Cellar/cmake/3.20.2/bin/cmake -E touch /Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/catch-populate-prefix/src/catch-populate-stamp/$CONFIGURATION$EFFECTIVE_PLATFORM_NAME/catch-populate-download
fi
";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXTargetDependency section */
		474BD47517CF48E7B2F85FA4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1AB5FEAF1051427E87352DC8 /* catch-populate */;
			targetProxy = 0C20DC57D07E4F67A42E1E4C /* PBXContainerItemProxy */;
		};
		641751DC51474184AC90EFEB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEE494D7DCB45F7AD3365A0 /* ZERO_CHECK */;
			targetProxy = 77817EDCFE8240B28AB11D0D /* PBXContainerItemProxy */;
		};
		A172FC62DB7D411F8FDD5C8D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEE494D7DCB45F7AD3365A0 /* ZERO_CHECK */;
			targetProxy = BE870549F9D9406B934B3F6B /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		076F2FB48C6D4FCA93E8637A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		16E063C0DD4D485ABF76C71D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "catch-populate";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		4988EDD853044038A4976FEB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		5479F6BD9DD74FB1B0E20E6B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/build";
			};
			name = MinSizeRel;
		};
		85A24DC660E04244A3E386A1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		976188D030714322BABAC1E6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/build";
			};
			name = Debug;
		};
		A0750A21787344B3A2688A84 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "catch-populate";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		ADED97286E7846FCB42A7CE3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		BACDFCB72B624744BBD4E30B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		C1955E3F00D84F9E9A88B8F3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "catch-populate";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		C3DB9C13CCA14BF784B305D2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/build";
			};
			name = RelWithDebInfo;
		};
		D05511F049D94B2784273BC5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		E13074DCB44248E98F2EA852 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		EB3C95C8EC504BD591006AF4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "catch-populate";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		F6DD4A9E944D4305BAB6343B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = ("");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		FB6A4D3931F74AF7BE0DF60A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = "/Users/philipwenkel/Github/flask/xbuild/_deps/catch-subbuild/build";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		7FAFDCBB40644E53A2B2B94A /* Build configuration list for PBXAggregateTarget "catch-populate" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A0750A21787344B3A2688A84 /* Debug */,
				EB3C95C8EC504BD591006AF4 /* Release */,
				C1955E3F00D84F9E9A88B8F3 /* MinSizeRel */,
				16E063C0DD4D485ABF76C71D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		94BFE90A0D6F4110903AF865 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BACDFCB72B624744BBD4E30B /* Debug */,
				ADED97286E7846FCB42A7CE3 /* Release */,
				D05511F049D94B2784273BC5 /* MinSizeRel */,
				4988EDD853044038A4976FEB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BC39290AFE1C46499D8C851A /* Build configuration list for PBXProject "catch-populate" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				976188D030714322BABAC1E6 /* Debug */,
				FB6A4D3931F74AF7BE0DF60A /* Release */,
				5479F6BD9DD74FB1B0E20E6B /* MinSizeRel */,
				C3DB9C13CCA14BF784B305D2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CFA213600DBA4E16A048CE8D /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				076F2FB48C6D4FCA93E8637A /* Debug */,
				F6DD4A9E944D4305BAB6343B /* Release */,
				E13074DCB44248E98F2EA852 /* MinSizeRel */,
				85A24DC660E04244A3E386A1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 08E0550153744D29A1E6451B /* Project object */;
}
